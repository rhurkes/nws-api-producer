{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48],"program":"/Users/z002qqy/.rustup/toolchains/beta-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rdkafka","/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=7b2bcfafea6cb1d7","-C","extra-filename=-7b2bcfafea6cb1d7","--out-dir","/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps","-L","dependency=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps","--extern","futures=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/libfutures-4c6a0279bec4d8be.rmeta","--extern","libc=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/liblibc-19403b19604fecf2.rmeta","--extern","log=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/liblog-6a0e10dc40793a57.rmeta","--extern","rdkafka_sys=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/librdkafka_sys-665fd43232792560.rmeta","--extern","serde=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/libserde-2d99ce7bf84cb9d2.rmeta","--extern","serde_derive=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/libserde_derive-465fe2c83ba66fc2.dylib","--extern","serde_json=/Users/z002qqy/code/personal/nws-api-producer/target/rls/debug/deps/libserde_json-ebf963dcf319de72.rmeta","--cap-lints","allow","-L","native=/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-sys-0.11.4-0/librdkafka/src","--error-format=json","--sysroot","/Users/z002qqy/.rustup/toolchains/beta-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,99,111,100,101,47,112,101,114,115,111,110,97,108,47,110,119,115,45,97,112,105,45,112,114,111,100,117,99,101,114,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,100,107,97,102,107,97,45,55,98,50,98,99,102,97,102,101,97,54,99,98,49,100,55,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rdkafka","disambiguator":[15015353295466853248,1870481078794329537]},"crate_root":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src","external_crates":[{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5176315762636812362,2114626227667244049]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11338876038115862616,10217233059752591795]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16742304071404191458,4052345900235138361]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14981555211719782656,12112262503804152647]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[14729594278364030725,2142984364133930581]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16629121279540951807,13134475007303618281]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12811011273609263960,5919232390496765084]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[12227017100965921782,6034170437713613646]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[10341237497156314342,9783808673967482652]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":10,"id":{"name":"log","disambiguator":[11732706930295567790,1718224936947542081]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":11,"id":{"name":"log","disambiguator":[509552309531341211,7817916058404038806]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[6625205520743626529,5993488942272018653]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":13,"id":{"name":"serde_derive","disambiguator":[12304294372266982769,3117027403044736334]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":14,"id":{"name":"serde_json","disambiguator":[15461971612845442062,1885578558733493975]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/statistics.rs","num":15,"id":{"name":"serde","disambiguator":[5375160639874338858,7190820367343675986]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":16,"id":{"name":"itoa","disambiguator":[8800521357785052614,6803790621851629864]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":17,"id":{"name":"ryu","disambiguator":[6998639757655975457,15634283022046007891]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":18,"id":{"name":"futures","disambiguator":[14309260439685349426,10352230073327308347]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":19,"id":{"name":"rdkafka_sys","disambiguator":[7999220411696443369,8836639666292249265]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":20,"id":{"name":"libz_sys","disambiguator":[17290517419945741929,17011119856994505366]}},{"file_name":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[9472108016823524013,17439582744241321560]}}],"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":10447,"line_start":1,"line_end":247,"column_start":1,"column_end":26}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":2840},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10001,"byte_end":10006,"line_start":227,"line_end":227,"column_start":16,"column_end":21},"alias_span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10010,"byte_end":10015,"line_start":227,"line_end":227,"column_start":25,"column_end":30},"name":"types","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":29903,"byte_end":29915,"line_start":6,"line_end":6,"column_start":30,"column_end":42},"alias_span":null,"name":"BaseConsumer","value":"","parent":{"krate":0,"index":214}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":29949,"byte_end":29962,"line_start":7,"line_end":7,"column_start":33,"column_end":46},"alias_span":null,"name":"MessageStream","value":"","parent":{"krate":0,"index":214}},{"kind":"Use","ref_id":{"krate":0,"index":460},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":29964,"byte_end":29978,"line_start":7,"line_end":7,"column_start":48,"column_end":62},"alias_span":null,"name":"StreamConsumer","value":"","parent":{"krate":0,"index":214}},{"kind":"Use","ref_id":{"krate":19,"index":3394},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61146,"byte_end":61158,"line_start":7,"line_end":7,"column_start":23,"column_end":35},"alias_span":null,"name":"RDKafkaError","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":104133,"byte_end":104147,"line_start":56,"line_end":56,"column_start":18,"column_end":32},"alias_span":null,"name":"DeliveryResult","value":"","parent":{"krate":0,"index":978}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101361,"byte_end":101373,"line_start":82,"line_end":82,"column_start":5,"column_end":17},"alias_span":null,"name":"BaseProducer","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101379,"byte_end":101393,"line_start":83,"line_end":83,"column_start":5,"column_end":19},"alias_span":null,"name":"DeliveryResult","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101399,"byte_end":101421,"line_start":84,"line_end":84,"column_start":5,"column_end":27},"alias_span":null,"name":"DefaultProducerContext","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101427,"byte_end":101442,"line_start":85,"line_end":85,"column_start":5,"column_end":20},"alias_span":null,"name":"ProducerContext","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1824},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101448,"byte_end":101458,"line_start":86,"line_end":86,"column_start":5,"column_end":15},"alias_span":null,"name":"BaseRecord","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101464,"byte_end":101480,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"alias_span":null,"name":"ThreadedProducer","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1250},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101522,"byte_end":101536,"line_start":90,"line_end":90,"column_start":5,"column_end":19},"alias_span":null,"name":"FutureProducer","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1264},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101542,"byte_end":101556,"line_start":91,"line_end":91,"column_start":5,"column_end":19},"alias_span":null,"name":"DeliveryFuture","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101562,"byte_end":101574,"line_start":92,"line_end":92,"column_start":5,"column_end":17},"alias_span":null,"name":"FutureRecord","value":"","parent":{"krate":0,"index":976}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10246,"byte_end":10259,"line_start":242,"line_end":242,"column_start":17,"column_end":30},"alias_span":null,"name":"ClientContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1578},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10277,"byte_end":10289,"line_start":243,"line_end":243,"column_start":17,"column_end":29},"alias_span":null,"name":"ClientConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10309,"byte_end":10316,"line_start":244,"line_end":244,"column_start":19,"column_end":26},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10318,"byte_end":10327,"line_start":244,"line_end":244,"column_start":28,"column_end":37},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10350,"byte_end":10360,"line_start":245,"line_end":245,"column_start":21,"column_end":31},"alias_span":null,"name":"Statistics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10393,"byte_end":10399,"line_start":246,"line_end":246,"column_start":32,"column_end":38},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1376},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10401,"byte_end":10419,"line_start":246,"line_end":246,"column_start":40,"column_end":58},"alias_span":null,"name":"TopicPartitionList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1470},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10436,"byte_end":10446,"line_start":247,"line_end":247,"column_start":15,"column_end":25},"alias_span":null,"name":"IntoOpaque","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":10447,"line_start":1,"line_end":247,"column_start":1,"column_end":26},"name":"","qualname":"::","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":140},{"krate":0,"index":214},{"krate":0,"index":570},{"krate":0,"index":616},{"krate":0,"index":672},{"krate":0,"index":912},{"krate":0,"index":976},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1436},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1516}],"decl_id":null,"docs":" # rust-rdkafka\n A fully asynchronous, [futures]-based Kafka client library for Rust based on [librdkafka].","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9620,"byte_end":9642,"line_start":210,"line_end":210,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/client.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":50},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":70},{"krate":0,"index":1532},{"krate":0,"index":1538},{"krate":0,"index":1534},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Common client functionalities.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":70},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":11429,"byte_end":11442,"line_start":29,"line_end":29,"column_start":11,"column_end":24},"name":"ClientContext","qualname":"::client::ClientContext","value":"ClientContext: Send + Sync","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76}],"decl_id":null,"docs":" Client-level context","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":11509,"byte_end":11512,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"log","qualname":"::client::ClientContext::log","value":"fn (&self, level: RDKafkaLogLevel, fac: &str, log_message: &str) -> ()","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Receives log lines from librdkafka.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":12451,"byte_end":12456,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"stats","qualname":"::client::ClientContext::stats","value":"fn (&self, statistics: Statistics) -> ()","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Receives the statistics of the librdkafka client. To enable, the\n \"statistics.interval.ms\" configuration parameter must be specified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":12612,"byte_end":12617,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"error","qualname":"::client::ClientContext::error","value":"fn (&self, error: KafkaError, reason: &str) -> ()","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Receives global errors from the librdkafka client.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1532},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13062,"byte_end":13082,"line_start":64,"line_end":64,"column_start":12,"column_end":32},"name":"DefaultClientContext","qualname":"::client::DefaultClientContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty `ClientContext` that can be used when no context is needed. Default\n callback implementations will be used.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13315,"byte_end":13327,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"NativeClient","qualname":"::client::NativeClient","value":"NativeClient {  }","parent":null,"children":[{"krate":0,"index":19}],"decl_id":null,"docs":" A native rdkafka-sys client. This struct shouldn't be used directly. Use higher level `Client`\n or producers and consumers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13620,"byte_end":13628,"line_start":84,"line_end":84,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<NativeClient>::from_ptr","value":"fn (ptr: *mut RDKafka) -> NativeClient","parent":null,"children":[],"decl_id":null,"docs":" Wraps a pointer to an RDKafka object and returns a new NativeClient.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13761,"byte_end":13764,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"ptr","qualname":"<NativeClient>::ptr","value":"fn (&self) -> *mut RDKafka","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped pointer to RDKafka.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":14290,"byte_end":14296,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":25}],"decl_id":null,"docs":" A low level rdkafka client. This client shouldn't be used directly. The producer and consumer modules\n provide different producer and consumer implementations based on top of `Client` that can be\n used instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":14517,"byte_end":14520,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<Client<C>>::new","value":"fn (config: &ClientConfig, native_config: NativeClientConfig, rd_kafka_type: RDKafkaType, context: C) -> KafkaResult<Client<C>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Client` given a configuration, a client type and a context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":15883,"byte_end":15896,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"native_client","qualname":"<Client<C>>::native_client","value":"fn (&self) -> &NativeClient","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the native rdkafka-sys client.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":16022,"byte_end":16032,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"native_ptr","qualname":"<Client<C>>::native_ptr","value":"fn (&self) -> *mut RDKafka","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the native rdkafka-sys client.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":16144,"byte_end":16151,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"context","qualname":"<Client<C>>::context","value":"fn (&self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":16348,"byte_end":16362,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"fetch_metadata","qualname":"<Client<C>>::fetch_metadata","value":"fn <T> (&self, topic: Option<&str>, timeout: T) -> KafkaResult<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata information for the specified topic, or for all topics in the cluster\n if no topic is specified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":17363,"byte_end":17379,"line_start":184,"line_end":184,"column_start":12,"column_end":28},"name":"fetch_watermarks","qualname":"<Client<C>>::fetch_watermarks","value":"fn <T> (&self, topic: &str, partition: i32, timeout: T) -> KafkaResult<(i64, i64)>","parent":null,"children":[],"decl_id":null,"docs":" Returns high and low watermark for the specified topic and partition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":18128,"byte_end":18144,"line_start":200,"line_end":200,"column_start":12,"column_end":28},"name":"fetch_group_list","qualname":"<Client<C>>::fetch_group_list","value":"fn <T> (&self, group: Option<&str>, timeout: T) -> KafkaResult<GroupList>","parent":null,"children":[],"decl_id":null,"docs":" Returns the group membership information for the given group. If no group is\n specified, all groups will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/config.rs","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":1564},{"krate":0,"index":1574},{"krate":0,"index":1570},{"krate":0,"index":1566},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":182},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":210}],"decl_id":null,"docs":" Producer and consumer configuration.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24206,"byte_end":24211,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Emerg","qualname":"::config::RDKafkaLogLevel::Emerg","value":"RDKafkaLogLevel::Emerg","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Higher priority then LogLevel::Error from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":413},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24286,"byte_end":24291,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Alert","qualname":"::config::RDKafkaLogLevel::Alert","value":"RDKafkaLogLevel::Alert","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Higher priority then LogLevel::Error from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24366,"byte_end":24374,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Critical","qualname":"::config::RDKafkaLogLevel::Critical","value":"RDKafkaLogLevel::Critical","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Higher priority then LogLevel::Error from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24442,"byte_end":24447,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"Error","qualname":"::config::RDKafkaLogLevel::Error","value":"RDKafkaLogLevel::Error","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Equivalent to LogLevel::Error from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":425},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24517,"byte_end":24524,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"Warning","qualname":"::config::RDKafkaLogLevel::Warning","value":"RDKafkaLogLevel::Warning","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Equivalent to LogLevel::Warning from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24598,"byte_end":24604,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Notice","qualname":"::config::RDKafkaLogLevel::Notice","value":"RDKafkaLogLevel::Notice","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Higher priority then LogLevel::Info from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24671,"byte_end":24675,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Info","qualname":"::config::RDKafkaLogLevel::Info","value":"RDKafkaLogLevel::Info","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Equivalent to LogLevel::Info from the log crate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":437},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24743,"byte_end":24748,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Debug","qualname":"::config::RDKafkaLogLevel::Debug","value":"RDKafkaLogLevel::Debug","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Equivalent to LogLevel::Debug from the log crate.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1564},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24119,"byte_end":24134,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"name":"RDKafkaLogLevel","qualname":"::config::RDKafkaLogLevel","value":"RDKafkaLogLevel::{Emerg, Alert, Critical, Error, Warning, Notice, Info, Debug}","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":417},{"krate":0,"index":421},{"krate":0,"index":425},{"krate":0,"index":429},{"krate":0,"index":433},{"krate":0,"index":437}],"decl_id":null,"docs":" The log levels supported by librdkafka.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24110,"byte_end":24755,"line_start":38,"line_end":55,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":25311,"byte_end":25329,"line_start":77,"line_end":77,"column_start":12,"column_end":30},"name":"NativeClientConfig","qualname":"::config::NativeClientConfig","value":"NativeClientConfig {  }","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":" A native rdkafka-sys client config.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":25499,"byte_end":25507,"line_start":83,"line_end":83,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<NativeClientConfig>::from_ptr","value":"fn (ptr: *mut RDKafkaConf) -> NativeClientConfig","parent":null,"children":[],"decl_id":null,"docs":" Wraps a pointer to an `RDKafkaConfig` object and returns a new `NativeClientConfig`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":25677,"byte_end":25680,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"ptr","qualname":"<NativeClientConfig>::ptr","value":"fn (&self) -> *mut RDKafkaConf","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer to the librdkafka RDKafkaConf structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26034,"byte_end":26042,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"ptr_move","qualname":"<NativeClientConfig>::ptr_move","value":"fn (self) -> *mut RDKafkaConf","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer to the librdkafka RDKafkaConf structure. This method should be used when\n the native pointer is intended to be moved. The destructor won't be executed automatically;\n the caller should take care of deallocating the resource when no longer needed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26388,"byte_end":26400,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"ClientConfig","qualname":"::config::ClientConfig","value":"ClientConfig { log_level }","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":443}],"decl_id":null,"docs":" Client configuration.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":443},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26549,"byte_end":26558,"line_start":114,"line_end":114,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::ClientConfig::log_level","value":"config::RDKafkaLogLevel","parent":{"krate":0,"index":1578},"children":[],"decl_id":null,"docs":" The librdkafka logging level. Refer to `RDKafkaLogLevel` for the list of available levels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26742,"byte_end":26745,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientConfig>::new","value":"fn () -> ClientConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26961,"byte_end":26964,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"set","qualname":"<ClientConfig>::set","value":"fn <'a> (&'a mut self, key: &str, value: &str) -> &'a mut ClientConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets a new parameter in the configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":27279,"byte_end":27292,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_log_level","qualname":"<ClientConfig>::set_log_level","value":"fn (&mut self, log_level: RDKafkaLogLevel) -> &mut ClientConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the log level of the client. If not specified, the log level will be calculated based\n on the global log level of the log crate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":27476,"byte_end":27496,"line_start":146,"line_end":146,"column_start":12,"column_end":32},"name":"create_native_config","qualname":"<ClientConfig>::create_native_config","value":"fn (&self) -> KafkaResult<NativeClientConfig>","parent":null,"children":[],"decl_id":null,"docs":" Returns the native rdkafka-sys configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":28385,"byte_end":28391,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"create","qualname":"<ClientConfig>::create","value":"fn <T> (&self) -> KafkaResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Uses the current configuration to create a new Consumer or Producer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":28589,"byte_end":28608,"line_start":170,"line_end":170,"column_start":12,"column_end":31},"name":"create_with_context","qualname":"<ClientConfig>::create_with_context","value":"fn <C, T> (&self, context: C) -> KafkaResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Uses the current configuration and the provided context to create a new Consumer or Producer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":206},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":29293,"byte_end":29309,"line_start":191,"line_end":191,"column_start":11,"column_end":27},"name":"FromClientConfig","qualname":"::config::FromClientConfig","value":"FromClientConfig: Sized","parent":null,"children":[{"krate":0,"index":208}],"decl_id":null,"docs":" Create a new client based on the provided configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":29418,"byte_end":29429,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"from_config","qualname":"::config::FromClientConfig::from_config","value":"fn (&ClientConfig) -> KafkaResult<Self>","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Create a client from client configuration. The default client context will be used.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":210},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":29553,"byte_end":29579,"line_start":197,"line_end":197,"column_start":11,"column_end":37},"name":"FromClientConfigAndContext","qualname":"::config::FromClientConfigAndContext","value":"FromClientConfigAndContext<C: ClientContext>: Sized","parent":null,"children":[{"krate":0,"index":212}],"decl_id":null,"docs":" Create a new client based on the provided configuration and context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":29686,"byte_end":29709,"line_start":199,"line_end":199,"column_start":8,"column_end":31},"name":"from_config_and_context","qualname":"::config::FromClientConfigAndContext::from_config_and_context","value":"fn (&ClientConfig, C) -> KafkaResult<Self>","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Create a client from client configuration and a client context.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"consumer","qualname":"::consumer","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/consumer/mod.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":360},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":1608},{"krate":0,"index":1614},{"krate":0,"index":1610},{"krate":0,"index":520},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536}],"decl_id":null,"docs":" Base trait and common functionality for all consumers.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":216},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base_consumer","qualname":"::consumer::base_consumer","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/consumer/base_consumer.rs","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":228},{"krate":0,"index":236},{"krate":0,"index":246},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":306},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":352}],"decl_id":null,"docs":" Low level consumer wrapper.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":40595,"byte_end":40607,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"BaseConsumer","qualname":"::consumer::base_consumer::BaseConsumer","value":"BaseConsumer {  }","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" Low level wrapper around the librdkafka consumer. This consumer requires to be periodically polled\n to make progress on rebalance, callbacks and to receive messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":42823,"byte_end":42827,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"poll","qualname":"<BaseConsumer<C>>::poll","value":"fn <T> (&self, timeout: T) -> Option<KafkaResult<BorrowedMessage>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the consumer for new messages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":44328,"byte_end":44332,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"iter","qualname":"<BaseConsumer<C>>::iter","value":"fn (&self) -> Iter<C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the available messages.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":51218,"byte_end":51222,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"Iter","qualname":"::consumer::base_consumer::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator for more convenient interface.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream_consumer","qualname":"::consumer::stream_consumer","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/consumer/stream_consumer.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":396},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":414},{"krate":0,"index":420},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":450},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":482}],"decl_id":null,"docs":" Stream-based consumer implementation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":55039,"byte_end":55052,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"MessageStream","qualname":"::consumer::stream_consumer::MessageStream","value":"MessageStream {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":119}],"decl_id":null,"docs":" A Kafka consumer implementing Stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":460},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":57826,"byte_end":57840,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"StreamConsumer","qualname":"::consumer::stream_consumer::StreamConsumer","value":"StreamConsumer {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"decl_id":null,"docs":" A Kafka Consumer providing a `futures::Stream` interface.","sig":null,"attributes":[{"value":"must_use = \"Consumer polling thread will stop immediately if unused\"","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":57743,"byte_end":57814,"line_start":143,"line_end":143,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":59102,"byte_end":59107,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"start","qualname":"<StreamConsumer<C>>::start","value":"fn (&self) -> MessageStream<C>","parent":null,"children":[],"decl_id":null,"docs":" Starts the StreamConsumer with default configuration (100ms polling interval and no\n `NoMessageReceived` notifications).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":59496,"byte_end":59506,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"start_with","qualname":"<StreamConsumer<C>>::start_with","value":"fn (&self, poll_interval: Duration, no_message_error: bool) -> MessageStream<C>","parent":null,"children":[],"decl_id":null,"docs":" Starts the StreamConsumer with the specified poll interval. Additionally, if\n `no_message_error` is set to true, it will return an error of type\n `KafkaError::NoMessageReceived` every time the poll interval is reached and no message has\n been received.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":60294,"byte_end":60298,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"stop","qualname":"<StreamConsumer<C>>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops the StreamConsumer, blocking the caller until the internal consumer has been stopped.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":30400,"byte_end":30406,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Assign","qualname":"::consumer::Rebalance::Assign","value":"Rebalance::Assign(&'a TopicPartitionList)","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" A new partition assignment is received.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":30472,"byte_end":30478,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Revoke","qualname":"::consumer::Rebalance::Revoke","value":"Rebalance::Revoke","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" All partitions are revoked.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":30521,"byte_end":30526,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Error","qualname":"::consumer::Rebalance::Error","value":"Rebalance::Error(String)","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":" Unexpected error from Kafka.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1608},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":30332,"byte_end":30341,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"Rebalance","qualname":"::consumer::Rebalance","value":"Rebalance::{Assign, Revoke, Error}","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":453}],"decl_id":null,"docs":" Rebalance information.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":520},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":30741,"byte_end":30756,"line_start":37,"line_end":37,"column_start":11,"column_end":26},"name":"ConsumerContext","qualname":"::consumer::ConsumerContext","value":"ConsumerContext: ClientContext","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528}],"decl_id":null,"docs":" Consumer specific Context. This user-defined object can be used to provide custom callbacks to\n consumer events. Refer to the list of methods to check which callbacks can be specified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":31001,"byte_end":31010,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"rebalance","qualname":"::consumer::ConsumerContext::rebalance","value":"fn (&self, native_client: &NativeClient, err: RDKafkaRespErr, tpl: &TopicPartitionList) -> ()","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" Implements the default rebalancing strategy and calls the `pre_rebalance` and\n `post_rebalance` methods. If this method is overridden, it will be responsibility\n of the user to call them if needed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":32476,"byte_end":32489,"line_start":82,"line_end":82,"column_start":8,"column_end":21},"name":"pre_rebalance","qualname":"::consumer::ConsumerContext::pre_rebalance","value":"fn <'a> (&self, rebalance: &Rebalance<'a>) -> ()","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" Pre-rebalance callback. This method will run before the rebalance and should\n terminate its execution quickly.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":32442,"byte_end":32468,"line_start":81,"line_end":81,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":32696,"byte_end":32710,"line_start":87,"line_end":87,"column_start":8,"column_end":22},"name":"post_rebalance","qualname":"::consumer::ConsumerContext::post_rebalance","value":"fn <'a> (&self, rebalance: &Rebalance<'a>) -> ()","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" Post-rebalance callback. This method will run after the rebalance and should\n terminate its execution quickly.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":32662,"byte_end":32688,"line_start":86,"line_end":86,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":32952,"byte_end":32967,"line_start":93,"line_end":93,"column_start":8,"column_end":23},"name":"commit_callback","qualname":"::consumer::ConsumerContext::commit_callback","value":"fn (&self, result: KafkaResult<()>, offsets: *mut RDKafkaTopicPartitionList) -> ()","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" Post commit callback. This method will run after a group of offsets was committed to the\n offset store.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":32918,"byte_end":32944,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1626},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33149,"byte_end":33171,"line_start":98,"line_end":98,"column_start":12,"column_end":34},"name":"DefaultConsumerContext","qualname":"::consumer::DefaultConsumerContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty consumer context that can be user when no context is needed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":161},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33414,"byte_end":33418,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Sync","qualname":"::consumer::CommitMode::Sync","value":"CommitMode::Sync","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Synchronous commit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":165},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33457,"byte_end":33462,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Async","qualname":"::consumer::CommitMode::Async","value":"CommitMode::Async","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Asynchronous commit.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":534},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33369,"byte_end":33379,"line_start":105,"line_end":105,"column_start":10,"column_end":20},"name":"CommitMode","qualname":"::consumer::CommitMode","value":"CommitMode::{Sync, Async}","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":165}],"decl_id":null,"docs":" Specifies if the commit should be performed synchronously\n or asynchronously.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":536},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33980,"byte_end":33988,"line_start":122,"line_end":122,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::consumer::Consumer","value":"Consumer<C: ConsumerContext = DefaultConsumerContext>","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568}],"decl_id":null,"docs":" Common trait for all consumers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":34090,"byte_end":34107,"line_start":124,"line_end":124,"column_start":8,"column_end":25},"name":"get_base_consumer","qualname":"::consumer::Consumer::get_base_consumer","value":"fn (&self) -> &BaseConsumer<C>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns a reference to the BaseConsumer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":34228,"byte_end":34237,"line_start":129,"line_end":129,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::consumer::Consumer::subscribe","value":"fn (&self, topics: &[&str]) -> KafkaResult<()>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Subscribe the consumer to a list of topics.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":34399,"byte_end":34410,"line_start":134,"line_end":134,"column_start":8,"column_end":19},"name":"unsubscribe","qualname":"::consumer::Consumer::unsubscribe","value":"fn (&self) -> ()","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Unsubscribe the current subscription list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":34611,"byte_end":34617,"line_start":140,"line_end":140,"column_start":8,"column_end":14},"name":"assign","qualname":"::consumer::Consumer::assign","value":"fn (&self, assignment: &TopicPartitionList) -> KafkaResult<()>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Manually assign topics and partitions to the consumer. If used, automatic consumer\n rebalance won't be activated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":35029,"byte_end":35035,"line_start":147,"line_end":147,"column_start":8,"column_end":14},"name":"commit","qualname":"::consumer::Consumer::commit","value":"fn (&self, topic_partition_list: &TopicPartitionList, mode: CommitMode) -> KafkaResult<()>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Commits the offset of the specified message. The commit can be sync (blocking), or async.\n Notice that when a specific offset is committed, all the previous offsets are considered\n committed as well. Use this method only if you are processing messages in order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":35512,"byte_end":35533,"line_start":155,"line_end":155,"column_start":8,"column_end":29},"name":"commit_consumer_state","qualname":"::consumer::Consumer::commit_consumer_state","value":"fn (&self, mode: CommitMode) -> KafkaResult<()>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Commit the current consumer state. Notice that if the consumer fails after a message\n has been received, but before the message has been processed by the user code,\n this might lead to data loss. Check the \"at-least-once delivery\" section in the readme\n for more information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":35805,"byte_end":35819,"line_start":161,"line_end":161,"column_start":8,"column_end":22},"name":"commit_message","qualname":"::consumer::Consumer::commit_message","value":"fn (&self, message: &BorrowedMessage, mode: CommitMode) -> KafkaResult<()>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Commit the provided message. Note that this will also automatically commit every\n message with lower offset within the same partition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":36136,"byte_end":36148,"line_start":167,"line_end":167,"column_start":8,"column_end":20},"name":"store_offset","qualname":"::consumer::Consumer::store_offset","value":"fn (&self, message: &BorrowedMessage) -> KafkaResult<()>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Store offset for this message to be used on the next (auto)commit.\n When using this `enable.auto.offset.store` should be set to `false` in the config.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":36321,"byte_end":36333,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"subscription","qualname":"::consumer::Consumer::subscription","value":"fn (&self) -> KafkaResult<TopicPartitionList>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns the current topic subscription.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":36490,"byte_end":36500,"line_start":177,"line_end":177,"column_start":8,"column_end":18},"name":"assignment","qualname":"::consumer::Consumer::assignment","value":"fn (&self) -> KafkaResult<TopicPartitionList>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns the current partition assignment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":36667,"byte_end":36676,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"committed","qualname":"::consumer::Consumer::committed","value":"fn <T> (&self, timeout: T) -> KafkaResult<TopicPartitionList>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Retrieve committed offsets for topics and partitions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":36944,"byte_end":36965,"line_start":191,"line_end":191,"column_start":8,"column_end":29},"name":"offsets_for_timestamp","qualname":"::consumer::Consumer::offsets_for_timestamp","value":"fn <T> (&self, timestamp: i64, timeout: T) -> KafkaResult<TopicPartitionList>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Lookup the offsets for this consumer's partitions by timestamp.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":37293,"byte_end":37301,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"position","qualname":"::consumer::Consumer::position","value":"fn (&self) -> KafkaResult<TopicPartitionList>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Retrieve current positions (offsets) for topics and partitions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":37537,"byte_end":37551,"line_start":208,"line_end":208,"column_start":8,"column_end":22},"name":"fetch_metadata","qualname":"::consumer::Consumer::fetch_metadata","value":"fn <T> (&self, topic: Option<&str>, timeout: T) -> KafkaResult<Metadata>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns the metadata information for the specified topic, or for all topics in the cluster\n if no topic is specified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":37859,"byte_end":37875,"line_start":218,"line_end":218,"column_start":8,"column_end":24},"name":"fetch_watermarks","qualname":"::consumer::Consumer::fetch_watermarks","value":"fn <T> (&self, topic: &str, partition: i32, timeout: T) -> KafkaResult<(i64, i64)>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns the metadata information for all the topics in the cluster.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":38271,"byte_end":38287,"line_start":230,"line_end":230,"column_start":8,"column_end":24},"name":"fetch_group_list","qualname":"::consumer::Consumer::fetch_group_list","value":"fn <T> (&self, group: Option<&str>, timeout: T) -> KafkaResult<GroupList>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns the group membership information for the given group. If no group is\n specified, all groups will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/error.rs","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":594},{"krate":0,"index":1632},{"krate":0,"index":1644},{"krate":0,"index":1638},{"krate":0,"index":1634},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":606},{"krate":0,"index":612}],"decl_id":null,"docs":" Error manipulations.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":584},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61188,"byte_end":61199,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"KafkaResult","qualname":"::error::KafkaResult","value":"Result<T, KafkaError>","parent":null,"children":[],"decl_id":null,"docs":" Kafka result.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":586},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61294,"byte_end":61301,"line_start":13,"line_end":13,"column_start":11,"column_end":18},"name":"IsError","qualname":"::error::IsError","value":"IsError","parent":null,"children":[{"krate":0,"index":588}],"decl_id":null,"docs":" Verify if the value represents an error condition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61365,"byte_end":61373,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"is_error","qualname":"::error::IsError::is_error","value":"fn (self) -> bool","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Return true if the value represents an error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":463},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61890,"byte_end":61902,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"name":"ClientConfig","qualname":"::error::KafkaError::ClientConfig","value":"KafkaError::ClientConfig(RDKafkaConfRes, String, String, String)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Invalid client configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":473},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61980,"byte_end":61994,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"ClientCreation","qualname":"::error::KafkaError::ClientCreation","value":"KafkaError::ClientCreation(String)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Client creation failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62040,"byte_end":62054,"line_start":40,"line_end":40,"column_start":5,"column_end":19},"name":"ConsumerCommit","qualname":"::error::KafkaError::ConsumerCommit","value":"KafkaError::ConsumerCommit(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Consumer commit failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":481},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62096,"byte_end":62102,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Global","qualname":"::error::KafkaError::Global","value":"KafkaError::Global(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Global error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":485},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62155,"byte_end":62169,"line_start":44,"line_end":44,"column_start":5,"column_end":19},"name":"GroupListFetch","qualname":"::error::KafkaError::GroupListFetch","value":"KafkaError::GroupListFetch(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Group list fetch failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62225,"byte_end":62243,"line_start":46,"line_end":46,"column_start":5,"column_end":23},"name":"MessageConsumption","qualname":"::error::KafkaError::MessageConsumption","value":"KafkaError::MessageConsumption(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Message consumption failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":493},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62297,"byte_end":62314,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"name":"MessageProduction","qualname":"::error::KafkaError::MessageProduction","value":"KafkaError::MessageProduction(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Message production error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62364,"byte_end":62377,"line_start":50,"line_end":50,"column_start":5,"column_end":18},"name":"MetadataFetch","qualname":"::error::KafkaError::MetadataFetch","value":"KafkaError::MetadataFetch(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Metadata fetch error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":501},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62430,"byte_end":62447,"line_start":52,"line_end":52,"column_start":5,"column_end":22},"name":"NoMessageReceived","qualname":"::error::KafkaError::NoMessageReceived","value":"KafkaError::NoMessageReceived","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" No message was received.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62485,"byte_end":62488,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Nul","qualname":"::error::KafkaError::Nul","value":"KafkaError::Nul(ffi::NulError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Unexpected null pointer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62538,"byte_end":62549,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"OffsetFetch","qualname":"::error::KafkaError::OffsetFetch","value":"KafkaError::OffsetFetch(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Offset fetch failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62603,"byte_end":62615,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"PartitionEOF","qualname":"::error::KafkaError::PartitionEOF","value":"KafkaError::PartitionEOF(i32)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Ond of partition reached.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":515},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62667,"byte_end":62685,"line_start":60,"line_end":60,"column_start":5,"column_end":23},"name":"SetPartitionOffset","qualname":"::error::KafkaError::SetPartitionOffset","value":"KafkaError::SetPartitionOffset(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Setting partition offset failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":519},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62734,"byte_end":62745,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"StoreOffset","qualname":"::error::KafkaError::StoreOffset","value":"KafkaError::StoreOffset(RDKafkaError)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Offset store failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":523},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62803,"byte_end":62815,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"Subscription","qualname":"::error::KafkaError::Subscription","value":"KafkaError::Subscription(String)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Subscription creation failed.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1632},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61835,"byte_end":61845,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"name":"KafkaError","qualname":"::error::KafkaError","value":"KafkaError::{ClientConfig, ClientCreation, ConsumerCommit, Global, GroupListFetch, MessageConsumption, MessageProduction, MetadataFetch, NoMessageReceived, Nul, OffsetFetch, PartitionEOF, SetPartitionOffset, StoreOffset, Subscription}","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":473},{"krate":0,"index":477},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":511},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":523}],"decl_id":null,"docs":" Represents all Kafka errors. Check the underlying `RDKafkaError` to get details.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61826,"byte_end":62826,"line_start":34,"line_end":65,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":616},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"groups","qualname":"::groups","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/groups.rs","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":668}],"decl_id":null,"docs":" Group membership API.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":628},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":68528,"byte_end":68543,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"GroupMemberInfo","qualname":"::groups::GroupMemberInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" Group member information container.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":68641,"byte_end":68643,"line_start":14,"line_end":14,"column_start":12,"column_end":14},"name":"id","qualname":"<GroupMemberInfo>::id","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the id of the member.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":68869,"byte_end":68878,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"client_id","qualname":"<GroupMemberInfo>::client_id","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the client id of the member.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":69106,"byte_end":69117,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"client_host","qualname":"<GroupMemberInfo>::client_host","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the client host of the member.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":69345,"byte_end":69353,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"metadata","qualname":"<GroupMemberInfo>::metadata","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the metadata of the member\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":69700,"byte_end":69710,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"assignment","qualname":"<GroupMemberInfo>::assignment","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the assignment of the member\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":642},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70054,"byte_end":70063,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"GroupInfo","qualname":"::groups::GroupInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" Group information container.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70150,"byte_end":70154,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"name","qualname":"<GroupInfo>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70375,"byte_end":70382,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"members","qualname":"<GroupInfo>::members","value":"fn (&self) -> &[GroupMemberInfo]","parent":null,"children":[],"decl_id":null,"docs":" Returns the members of the group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70583,"byte_end":70588,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"state","qualname":"<GroupInfo>::state","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the state of the group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70805,"byte_end":70813,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"protocol","qualname":"<GroupInfo>::protocol","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the protocol of the group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71046,"byte_end":71059,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"protocol_type","qualname":"<GroupInfo>::protocol_type","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the protocol type of the group.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71526,"byte_end":71535,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"GroupList","qualname":"::groups::GroupList","value":"","parent":null,"children":[],"decl_id":null,"docs":" List of groups. This structure wraps the  pointer returned by rdkafka-sys, and deallocates all\n the native resources when dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71695,"byte_end":71703,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<GroupList>::from_ptr","value":"fn (ptr: *const RDKafkaGroupList) -> GroupList","parent":null,"children":[],"decl_id":null,"docs":" Creates a new group list given a pointer to the native rdkafka-sys group list structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71834,"byte_end":71840,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"groups","qualname":"<GroupList>::groups","value":"fn (&self) -> &[GroupInfo]","parent":null,"children":[],"decl_id":null,"docs":" Returns all the groups in the list.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":672},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::message","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/message.rs","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":706},{"krate":0,"index":1648},{"krate":0,"index":1666},{"krate":0,"index":1660},{"krate":0,"index":1656},{"krate":0,"index":1652},{"krate":0,"index":1650},{"krate":0,"index":708},{"krate":0,"index":714},{"krate":0,"index":718},{"krate":0,"index":722},{"krate":0,"index":730},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":762},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":776},{"krate":0,"index":792},{"krate":0,"index":810},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":828},{"krate":0,"index":834},{"krate":0,"index":838},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":842},{"krate":0,"index":846},{"krate":0,"index":864},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":882},{"krate":0,"index":886},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":902},{"krate":0,"index":906},{"krate":0,"index":910},{"krate":0,"index":1684},{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1696},{"krate":0,"index":1700},{"krate":0,"index":1704},{"krate":0,"index":1708},{"krate":0,"index":1712},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":1724},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1736},{"krate":0,"index":1740},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1752},{"krate":0,"index":1756},{"krate":0,"index":1760},{"krate":0,"index":1764},{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1784},{"krate":0,"index":1788},{"krate":0,"index":1792},{"krate":0,"index":1796},{"krate":0,"index":1800},{"krate":0,"index":1804},{"krate":0,"index":1808},{"krate":0,"index":1812}],"decl_id":null,"docs":" Store and manipulate Kafka messages.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72554,"byte_end":72566,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"name":"NotAvailable","qualname":"::message::Timestamp::NotAvailable","value":"Timestamp::NotAvailable","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":" Timestamp not available\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":529},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72602,"byte_end":72612,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CreateTime","qualname":"::message::Timestamp::CreateTime","value":"Timestamp::CreateTime(i64)","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":" Message creation time\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72647,"byte_end":72660,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"LogAppendTime","qualname":"::message::Timestamp::LogAppendTime","value":"Timestamp::LogAppendTime(i64)","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":" Log append time\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1648},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72506,"byte_end":72515,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"Timestamp","qualname":"::message::Timestamp","value":"Timestamp::{NotAvailable, CreateTime, LogAppendTime}","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":533}],"decl_id":null,"docs":" Timestamp of a message\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72497,"byte_end":72667,"line_start":21,"line_end":28,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72497,"byte_end":72667,"line_start":21,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72756,"byte_end":72765,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"to_millis","qualname":"<Timestamp>::to_millis","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Convert the timestamp to milliseconds since epoch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73100,"byte_end":73103,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"now","qualname":"<Timestamp>::now","value":"fn () -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Timestamp::CreateTime` representing the current time.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":722},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73895,"byte_end":73902,"line_start":69,"line_end":69,"column_start":11,"column_end":18},"name":"Headers","qualname":"::message::Headers","value":"Headers","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728}],"decl_id":null,"docs":" Message headers trait","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73958,"byte_end":73963,"line_start":71,"line_end":71,"column_start":8,"column_end":13},"name":"count","qualname":"::message::Headers::count","value":"fn (&self) -> usize","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Return the number of defined headers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74121,"byte_end":74124,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"get","qualname":"::message::Headers::get","value":"fn (&self, idx: usize) -> Option<(&str, &[u8])>","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Get the specified header (the first header corresponds to index 0). If the index is\n out of bounds, None is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74347,"byte_end":74353,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"get_as","qualname":"::message::Headers::get_as","value":"fn <V> (&self, idx: usize) -> Option<(&str, Result<&V, V::Error>)>","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Same as [Headers::get], but the value of the header will be converted to the specified type.\n If the conversion fails, an error will be returned instead.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":730},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74625,"byte_end":74632,"line_start":86,"line_end":86,"column_start":11,"column_end":18},"name":"Message","qualname":"::message::Message","value":"Message","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750}],"decl_id":null,"docs":" The `Message` trait provides access to the fields of a generic Kafka message.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":732},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74710,"byte_end":74717,"line_start":88,"line_end":88,"column_start":10,"column_end":17},"name":"Headers","qualname":"::message::Message::Headers","value":"type Headers: Headers;","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Represent the type of headers that this message contains.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74804,"byte_end":74807,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"key","qualname":"::message::Message::key","value":"fn (&self) -> Option<&[u8]>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the key of the message, or None if there is no key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":74917,"byte_end":74924,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"payload","qualname":"::message::Message::payload","value":"fn (&self) -> Option<&[u8]>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the payload of the message, or None if there is no payload.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75007,"byte_end":75012,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"topic","qualname":"::message::Message::topic","value":"fn (&self) -> &str","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the source topic of the message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75103,"byte_end":75112,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"partition","qualname":"::message::Message::partition","value":"fn (&self) -> i32","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the partition number where the message is stored.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75179,"byte_end":75185,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"offset","qualname":"::message::Message::offset","value":"fn (&self) -> i64","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the offset of the message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75284,"byte_end":75293,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::message::Message::timestamp","value":"fn (&self) -> Timestamp","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the message timestamp for a consumed message if available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75508,"byte_end":75520,"line_start":110,"line_end":110,"column_start":8,"column_end":20},"name":"payload_view","qualname":"::message::Message::payload_view","value":"fn <P> (&self) -> Option<Result<&P, P::Error>>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Converts the raw bytes of the payload to a reference of the specified type, that points to the\n same data inside the message and without performing any memory allocation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":75822,"byte_end":75830,"line_start":116,"line_end":116,"column_start":8,"column_end":16},"name":"key_view","qualname":"::message::Message::key_view","value":"fn <K> (&self) -> Option<Result<&K, K::Error>>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Converts the raw bytes of the key to a reference of the specified type, that points to the\n same data inside the message and without performing any memory allocation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76005,"byte_end":76012,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"headers","qualname":"::message::Message::headers","value":"fn (&self) -> Option<&Self::Headers>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Returns the headers of the message, if available.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76233,"byte_end":76248,"line_start":129,"line_end":129,"column_start":12,"column_end":27},"name":"BorrowedHeaders","qualname":"::message::BorrowedHeaders","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed message headers","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":768},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":78174,"byte_end":78189,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"BorrowedMessage","qualname":"::message::BorrowedMessage","value":"BorrowedMessage {  }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":211}],"decl_id":null,"docs":" A zero-copy Kafka message.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":78896,"byte_end":78910,"line_start":201,"line_end":201,"column_start":10,"column_end":24},"name":"DeliveryResult","qualname":"::message::DeliveryResult","value":"Result<BorrowedMessage<'a>, (KafkaError, BorrowedMessage<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" The result of a message production.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":79596,"byte_end":79609,"line_start":215,"line_end":215,"column_start":19,"column_end":32},"name":"from_consumer","qualname":"<BorrowedMessage<'a>>::from_consumer","value":"fn <C> (ptr: *mut RDKafkaMessage, _consumer: &'a C) -> KafkaResult<BorrowedMessage<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BorrowedMessage` that wraps the native Kafka message pointer returned by a\n consumer. The lifetime of the message will be bound to the lifetime of the consumer passed\n as parameter. This method should only be used with messages coming from consumers. If the\n message contains an error, only the error is returned and the message structure is freed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":80601,"byte_end":80617,"line_start":234,"line_end":234,"column_start":19,"column_end":35},"name":"from_dr_callback","qualname":"<BorrowedMessage<'a>>::from_dr_callback","value":"fn <O> (ptr: *mut RDKafkaMessage, _owner: &'a O) -> DeliveryResult<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BorrowedMessage` that wraps the native Kafka message pointer returned by the\n delivery callback of a producer. The lifetime of the message will be bound to the lifetime\n of the reference passed as parameter. This method should only be used with messages coming\n from the delivery callback. The message will not be freed in any circumstance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81011,"byte_end":81014,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"ptr","qualname":"<BorrowedMessage<'a>>::ptr","value":"fn (&self) -> *mut RDKafkaMessage","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the RDKafkaMessage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81138,"byte_end":81147,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"topic_ptr","qualname":"<BorrowedMessage<'a>>::topic_ptr","value":"fn (&self) -> *mut RDKafkaTopic","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the message's RDKafkaTopic\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81291,"byte_end":81298,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"key_len","qualname":"<BorrowedMessage<'a>>::key_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the key field of the message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81438,"byte_end":81449,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"payload_len","qualname":"<BorrowedMessage<'a>>::payload_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the payload field of the message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":81707,"byte_end":81713,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"detach","qualname":"<BorrowedMessage<'a>>::detach","value":"fn (&self) -> OwnedMessage","parent":null,"children":[],"decl_id":null,"docs":" Clones the content of the `BorrowedMessage` and returns an `OwnedMessage`, that can\n outlive the consumer. This operation requires memory allocation and can be expensive.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1672},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84615,"byte_end":84627,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"OwnedHeaders","qualname":"::message::OwnedHeaders","value":"OwnedHeaders {  }","parent":null,"children":[{"krate":0,"index":537}],"decl_id":null,"docs":" Owned message headers","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84800,"byte_end":84803,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedHeaders>::new","value":"fn () -> OwnedHeaders","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OwnedHeaders` struct with initial capacity 5.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":85037,"byte_end":85054,"line_start":368,"line_end":368,"column_start":12,"column_end":29},"name":"new_with_capacity","qualname":"<OwnedHeaders>::new_with_capacity","value":"fn (initial_capacity: usize) -> OwnedHeaders","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OwnedHeaders` struct with the desired initial capacity. The structure\n is automatically resized as more headers are added.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":85266,"byte_end":85269,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"add","qualname":"<OwnedHeaders>::add","value":"fn <V> (self, name: &str, value: &V) -> OwnedHeaders","parent":null,"children":[],"decl_id":null,"docs":" Add a new header to the structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86045,"byte_end":86056,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"as_borrowed","qualname":"<OwnedHeaders>::as_borrowed","value":"fn (&self) -> &BorrowedHeaders","parent":null,"children":[],"decl_id":null,"docs":" Generate a read-only [BorrowedHeaders] reference.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1678},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86948,"byte_end":86960,"line_start":431,"line_end":431,"column_start":12,"column_end":24},"name":"OwnedMessage","qualname":"::message::OwnedMessage","value":"OwnedMessage {  }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551}],"decl_id":null,"docs":" An [OwnedMessage] can be created from a [BorrowedMessage] using the [BorrowedMessage::detach]\n method. [OwnedMessage]s don't hold any reference to the consumer and don't use any memory inside the\n consumer buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87260,"byte_end":87263,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedMessage>::new","value":"fn (payload: Option<Vec<u8>>, key: Option<Vec<u8>>, topic: String, timestamp: Timestamp, partition: i32, offset: i64, headers: Option<OwnedHeaders>) -> OwnedMessage","parent":null,"children":[],"decl_id":null,"docs":" Create a new message with the specified content. Mainly useful for writing tests.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":864},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":88533,"byte_end":88542,"line_start":498,"line_end":498,"column_start":11,"column_end":20},"name":"FromBytes","qualname":"::message::FromBytes","value":"FromBytes","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":868}],"decl_id":null,"docs":" Given a reference to a byte array, returns a different view of the same data.\n No allocation is performed, however the underlying data might be checked for\n correctness (for example when converting to `str`).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":88626,"byte_end":88631,"line_start":500,"line_end":500,"column_start":10,"column_end":15},"name":"Error","qualname":"::message::FromBytes::Error","value":"type Error;","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" The error type that will be used whenever the conversion fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":88712,"byte_end":88722,"line_start":502,"line_end":502,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::message::FromBytes::from_bytes","value":"fn (&[u8]) -> Result<&Self, Self::Error>","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Tries to convert the provided byte slice into a different type.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":882},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89185,"byte_end":89192,"line_start":521,"line_end":521,"column_start":11,"column_end":18},"name":"ToBytes","qualname":"::message::ToBytes","value":"ToBytes","parent":null,"children":[{"krate":0,"index":884}],"decl_id":null,"docs":" Given some data, returns the byte representation of that data.\n No copy of the data should be performed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89246,"byte_end":89254,"line_start":523,"line_end":523,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::message::ToBytes::to_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":882},"children":[],"decl_id":null,"docs":" Convert the provided data to bytes.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":912},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/metadata.rs","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":972}],"decl_id":null,"docs":" Cluster metadata.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":91714,"byte_end":91728,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"MetadataBroker","qualname":"::metadata::MetadataBroker","value":"","parent":null,"children":[],"decl_id":null,"docs":" Broker metadata information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":91825,"byte_end":91827,"line_start":15,"line_end":15,"column_start":12,"column_end":14},"name":"id","qualname":"<MetadataBroker>::id","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the broker.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":91925,"byte_end":91929,"line_start":20,"line_end":20,"column_start":12,"column_end":16},"name":"host","qualname":"<MetadataBroker>::host","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the host name of the broker.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92165,"byte_end":92169,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"port","qualname":"<MetadataBroker>::port","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the port of the broker.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92262,"byte_end":92279,"line_start":35,"line_end":35,"column_start":12,"column_end":29},"name":"MetadataPartition","qualname":"::metadata::MetadataPartition","value":"","parent":null,"children":[],"decl_id":null,"docs":" Partition metadata information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92385,"byte_end":92387,"line_start":39,"line_end":39,"column_start":12,"column_end":14},"name":"id","qualname":"<MetadataPartition>::id","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the partition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92510,"byte_end":92516,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"leader","qualname":"<MetadataPartition>::leader","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the broker id of the leader broker for the partition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92685,"byte_end":92690,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"error","qualname":"<MetadataPartition>::error","value":"fn (&self) -> Option<RDKafkaRespErr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata error for the partition, or None if there is no error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92900,"byte_end":92908,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"replicas","qualname":"<MetadataPartition>::replicas","value":"fn (&self) -> &[i32]","parent":null,"children":[],"decl_id":null,"docs":" Returns the broker ids of the replicas.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93089,"byte_end":93092,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"isr","qualname":"<MetadataPartition>::isr","value":"fn (&self) -> &[i32]","parent":null,"children":[],"decl_id":null,"docs":" Returns the broker ids of the in sync replicas.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93243,"byte_end":93256,"line_start":70,"line_end":70,"column_start":12,"column_end":25},"name":"MetadataTopic","qualname":"::metadata::MetadataTopic","value":"","parent":null,"children":[],"decl_id":null,"docs":" Topic metadata information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93352,"byte_end":93356,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"name","qualname":"<MetadataTopic>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the topic.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93627,"byte_end":93637,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"partitions","qualname":"<MetadataTopic>::partitions","value":"fn (&self) -> &[MetadataPartition]","parent":null,"children":[],"decl_id":null,"docs":" Returns the partition metadata information for all the partitions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93875,"byte_end":93880,"line_start":88,"line_end":88,"column_start":12,"column_end":17},"name":"error","qualname":"<MetadataTopic>::error","value":"fn (&self) -> Option<RDKafkaRespErr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata error, or None if there was no error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94194,"byte_end":94202,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::metadata::Metadata","value":"","parent":null,"children":[],"decl_id":null,"docs":" Metadata container. This structure wraps the metadata pointer returned by rdkafka-sys,\n and deallocates all the native resources when dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94356,"byte_end":94364,"line_start":103,"line_end":103,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<Metadata>::from_ptr","value":"fn (ptr: *const RDKafkaMetadata) -> Metadata","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Metadata container given a pointer to the native rdkafka-sys metadata.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94512,"byte_end":94526,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"orig_broker_id","qualname":"<Metadata>::orig_broker_id","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the broker originating this metadata.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94675,"byte_end":94691,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"orig_broker_name","qualname":"<Metadata>::orig_broker_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the hostname of the broker originating this metadata.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94979,"byte_end":94986,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"brokers","qualname":"<Metadata>::brokers","value":"fn (&self) -> &[MetadataBroker]","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata information for all the brokers in the cluster.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":95227,"byte_end":95233,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"topics","qualname":"<Metadata>::topics","value":"fn (&self) -> &[MetadataTopic]","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata information for all the topics in the cluster.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":976},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"producer","qualname":"::producer","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/producer/mod.rs","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":1142},{"krate":0,"index":1286},{"krate":0,"index":1300}],"decl_id":null,"docs":" Low level and high level rdkafka producers.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":978},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base_producer","qualname":"::producer::base_producer","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/producer/base_producer.rs","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":992},{"krate":0,"index":1000},{"krate":0,"index":1008},{"krate":0,"index":1016},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1036},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1066},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1068},{"krate":0,"index":1082},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1110},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1138}],"decl_id":null,"docs":" Low level Kafka producers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1052},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":104469,"byte_end":104484,"line_start":65,"line_end":65,"column_start":11,"column_end":26},"name":"ProducerContext","qualname":"::producer::base_producer::ProducerContext","value":"ProducerContext: ClientContext","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056}],"decl_id":null,"docs":" A `ProducerContext` is an object that can be used during the creation of a producer to\n customizer its behavior. In particular, it can be used to specify the `delivery` callback\n that will be called when the ack from a delivered message is received.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1054},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":104733,"byte_end":104747,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"DeliveryOpaque","qualname":"::producer::base_producer::ProducerContext::DeliveryOpaque","value":"type DeliveryOpaque: IntoOpaque;","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":" A `DeliveryOpaque` is a user-defined structure that will be passed to the producer when\n producing a message, and returned to the `delivery` method once the message has been\n delivered, or failed to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":104941,"byte_end":104949,"line_start":73,"line_end":73,"column_start":8,"column_end":16},"name":"delivery","qualname":"::producer::base_producer::ProducerContext::delivery","value":"fn (&self, delivery_result: &DeliveryResult, delivery_opaque: Self::DeliveryOpaque) -> ()","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":" This method will be called once the message has been delivered (or failed to). The\n `DeliveryOpaque` will be the one provided by the user when calling send.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":105147,"byte_end":105169,"line_start":79,"line_end":79,"column_start":12,"column_end":34},"name":"DefaultProducerContext","qualname":"::producer::base_producer::DefaultProducerContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Default producer context that can be use when a custom context is not required.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1824},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":107707,"byte_end":107717,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"BaseRecord","qualname":"::producer::base_producer::BaseRecord","value":"BaseRecord { topic, partition, payload, key, timestamp, headers, delivery_opaque }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641}],"decl_id":null,"docs":" Producer record for the base producer","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":629},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":107849,"byte_end":107854,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"topic","qualname":"::producer::base_producer::BaseRecord::topic","value":"&'a str","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Required destination topic\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":631},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":107912,"byte_end":107921,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"name":"partition","qualname":"::producer::base_producer::BaseRecord::partition","value":"std::option::Option<i32>","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Optional destination partition\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":633},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":107969,"byte_end":107976,"line_start":150,"line_end":150,"column_start":9,"column_end":16},"name":"payload","qualname":"::producer::base_producer::BaseRecord::payload","value":"std::option::Option<&'a P>","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Optional payload\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":635},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108022,"byte_end":108025,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"key","qualname":"::producer::base_producer::BaseRecord::key","value":"std::option::Option<&'a K>","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Optional key\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":637},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108077,"byte_end":108086,"line_start":154,"line_end":154,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::producer::base_producer::BaseRecord::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Optional timestamp\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":639},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108142,"byte_end":108149,"line_start":156,"line_end":156,"column_start":9,"column_end":16},"name":"headers","qualname":"::producer::base_producer::BaseRecord::headers","value":"std::option::Option<message::OwnedHeaders>","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Optional message headers\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":641},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108249,"byte_end":108264,"line_start":158,"line_end":158,"column_start":9,"column_end":24},"name":"delivery_opaque","qualname":"::producer::base_producer::BaseRecord::delivery_opaque","value":"D","parent":{"krate":0,"index":1824},"children":[],"decl_id":null,"docs":" Required delivery opaque (defaults to `()` if not required)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108454,"byte_end":108468,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"with_opaque_to","qualname":"<BaseRecord<'a, K, P, D>>::with_opaque_to","value":"fn (topic: &'a str, delivery_opaque: D) -> BaseRecord<'a, K, P, D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new record with the specified topic name and delivery opaque.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108819,"byte_end":108828,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"partition","qualname":"<BaseRecord<'a, K, P, D>>::partition","value":"fn (mut self, partition: i32) -> BaseRecord<'a, K, P, D>","parent":null,"children":[],"decl_id":null,"docs":" Set the destination partition of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108996,"byte_end":109003,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"payload","qualname":"<BaseRecord<'a, K, P, D>>::payload","value":"fn (mut self, payload: &'a P) -> BaseRecord<'a, K, P, D>","parent":null,"children":[],"decl_id":null,"docs":" Set the payload of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":109163,"byte_end":109166,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"key","qualname":"<BaseRecord<'a, K, P, D>>::key","value":"fn (mut self, key: &'a K) -> BaseRecord<'a, K, P, D>","parent":null,"children":[],"decl_id":null,"docs":" Set the key of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":109320,"byte_end":109329,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<BaseRecord<'a, K, P, D>>::timestamp","value":"fn (mut self, timestamp: i64) -> BaseRecord<'a, K, P, D>","parent":null,"children":[],"decl_id":null,"docs":" Set the timestamp of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":109497,"byte_end":109504,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"headers","qualname":"<BaseRecord<'a, K, P, D>>::headers","value":"fn (mut self, headers: OwnedHeaders) -> BaseRecord<'a, K, P, D>","parent":null,"children":[],"decl_id":null,"docs":" Set the headers of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":109775,"byte_end":109777,"line_start":208,"line_end":208,"column_start":12,"column_end":14},"name":"to","qualname":"<BaseRecord<'a, K, P, ()>>::to","value":"fn (topic: &'a str) -> BaseRecord<'a, K, P, ()>","parent":null,"children":[],"decl_id":null,"docs":" Create a new record with the specified topic name.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1094},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":112280,"byte_end":112292,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"BaseProducer","qualname":"::producer::base_producer::BaseProducer","value":"BaseProducer {  }","parent":null,"children":[{"krate":0,"index":275}],"decl_id":null,"docs":" Low level Kafka producer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":112781,"byte_end":112785,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"name":"poll","qualname":"<BaseProducer<C>>::poll","value":"fn <T> (&self, timeout: T) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Polls the producer. Regular calls to `poll` are required to process the events\n and execute the message delivery callbacks. Returns the number of events served.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":114025,"byte_end":114029,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"send","qualname":"<BaseProducer<C>>::send","value":"fn <'a, K, P> (&self, record: BaseRecord<'a, K, P, C::DeliveryOpaque>) -> Result<(), (KafkaError, BaseRecord<'a, K, P, C::DeliveryOpaque>)>","parent":null,"children":[],"decl_id":null,"docs":" Produce a message to Kafka. Message fields such as key, payload, partition, timestamp etc.\n are provided to this method via a [BaseRecord]. If the message is correctly enqueued in the\n producer's memory buffer, the method will take ownership of the record and return\n immediately; in case of failure to enqueue, the original record is returned, alongside an\n error code. If the message fails to be produced after being enqueued in the buffer, the\n [ProducerContext::delivery] method will be called asynchronously, with the provided\n [ProducerContext::DeliveryOpaque].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":115905,"byte_end":115910,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"flush","qualname":"<BaseProducer<C>>::flush","value":"fn <T> (&self, timeout: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flushes the producer. Should be called before termination. This method will call `poll()`\n internally.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":116155,"byte_end":116170,"line_start":351,"line_end":351,"column_start":12,"column_end":27},"name":"in_flight_count","qualname":"<BaseProducer<C>>::in_flight_count","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages waiting to be sent, or sent but not acknowledged yet.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":116884,"byte_end":116900,"line_start":372,"line_end":372,"column_start":12,"column_end":28},"name":"ThreadedProducer","qualname":"::producer::base_producer::ThreadedProducer","value":"ThreadedProducer {  }","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299}],"decl_id":null,"docs":" A producer with a separate thread for event handling.","sig":null,"attributes":[{"value":"must_use = \"The threaded producer will stop immediately if unused\"","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":116803,"byte_end":116872,"line_start":371,"line_end":371,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":119744,"byte_end":119748,"line_start":440,"line_end":440,"column_start":12,"column_end":16},"name":"send","qualname":"<ThreadedProducer<C>>::send","value":"fn <'a, K, P> (&self, record: BaseRecord<'a, K, P, C::DeliveryOpaque>) -> Result<(), (KafkaError, BaseRecord<'a, K, P, C::DeliveryOpaque>)>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message to Kafka. See the documentation in `BaseProducer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":120164,"byte_end":120168,"line_start":449,"line_end":449,"column_start":12,"column_end":16},"name":"poll","qualname":"<ThreadedProducer<C>>::poll","value":"fn <T> (&self, timeout: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Polls the internal producer. This is not normally required since the `ThreadedProducer` had\n a thread dedicated to calling `poll` regularly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":120339,"byte_end":120344,"line_start":454,"line_end":454,"column_start":12,"column_end":17},"name":"flush","qualname":"<ThreadedProducer<C>>::flush","value":"fn <T> (&self, timeout: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flushes the producer. Should be called before termination.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":120542,"byte_end":120557,"line_start":459,"line_end":459,"column_start":12,"column_end":27},"name":"in_flight_count","qualname":"<ThreadedProducer<C>>::in_flight_count","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages waiting to be sent, or send but not acknowledged yet.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1142},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future_producer","qualname":"::producer::future_producer","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/producer/future_producer.rs","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1150},{"krate":0,"index":1160},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1180},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1216},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1244},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1274}],"decl_id":null,"docs":" Future producer","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1848},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122217,"byte_end":122229,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"FutureRecord","qualname":"::producer::future_producer::FutureRecord","value":"FutureRecord { topic, partition, payload, key, timestamp, headers }","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667}],"decl_id":null,"docs":" Same as [BaseRecord] but specific to the [FutureProducer]. The only difference is that\n the [FutureRecord] doesn't provide custom delivery opaque object.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":657},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122331,"byte_end":122336,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"topic","qualname":"::producer::future_producer::FutureRecord::topic","value":"&'a str","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Required destination topic\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":659},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122394,"byte_end":122403,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"name":"partition","qualname":"::producer::future_producer::FutureRecord::partition","value":"std::option::Option<i32>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Optional destination partition\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":661},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122451,"byte_end":122458,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"payload","qualname":"::producer::future_producer::FutureRecord::payload","value":"std::option::Option<&'a P>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Optional payload\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":663},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122504,"byte_end":122507,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"key","qualname":"::producer::future_producer::FutureRecord::key","value":"std::option::Option<&'a K>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Optional key\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":665},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122559,"byte_end":122568,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::producer::future_producer::FutureRecord::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Optional timestamp\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122624,"byte_end":122631,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"headers","qualname":"::producer::future_producer::FutureRecord::headers","value":"std::option::Option<message::OwnedHeaders>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Optional message headers\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122804,"byte_end":122806,"line_start":43,"line_end":43,"column_start":12,"column_end":14},"name":"to","qualname":"<FutureRecord<'a, K, P>>::to","value":"fn (topic: &'a str) -> FutureRecord<'a, K, P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new record with the specified topic name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":123502,"byte_end":123511,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"partition","qualname":"<FutureRecord<'a, K, P>>::partition","value":"fn (mut self, partition: i32) -> FutureRecord<'a, K, P>","parent":null,"children":[],"decl_id":null,"docs":" Set the destination partition of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":123690,"byte_end":123697,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"payload","qualname":"<FutureRecord<'a, K, P>>::payload","value":"fn (mut self, payload: &'a P) -> FutureRecord<'a, K, P>","parent":null,"children":[],"decl_id":null,"docs":" Set the destination payload of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":123868,"byte_end":123871,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"key","qualname":"<FutureRecord<'a, K, P>>::key","value":"fn (mut self, key: &'a K) -> FutureRecord<'a, K, P>","parent":null,"children":[],"decl_id":null,"docs":" Set the destination key of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":124036,"byte_end":124045,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<FutureRecord<'a, K, P>>::timestamp","value":"fn (mut self, timestamp: i64) -> FutureRecord<'a, K, P>","parent":null,"children":[],"decl_id":null,"docs":" Set the destination timestamp of the record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":124212,"byte_end":124219,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"headers","qualname":"<FutureRecord<'a, K, P>>::headers","value":"fn (mut self, headers: OwnedHeaders) -> FutureRecord<'a, K, P>","parent":null,"children":[],"decl_id":null,"docs":" Set the headers of the record.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1250},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127154,"byte_end":127168,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"FutureProducer","qualname":"::producer::future_producer::FutureProducer","value":"FutureProducer {  }","parent":null,"children":[{"krate":0,"index":335}],"decl_id":null,"docs":" A producer that returns a `Future` for every message being produced.","sig":null,"attributes":[{"value":"must_use = \"Producer polling thread will stop immediately if unused\"","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127071,"byte_end":127142,"line_start":158,"line_end":158,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":128321,"byte_end":128335,"line_start":187,"line_end":187,"column_start":12,"column_end":26},"name":"DeliveryFuture","qualname":"::producer::future_producer::DeliveryFuture","value":"DeliveryFuture {  }","parent":null,"children":[{"krate":0,"index":341}],"decl_id":null,"docs":" A [Future] wrapping the result of the message production.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":129068,"byte_end":129072,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"send","qualname":"<FutureProducer<C>>::send","value":"fn <P, K> (&self, record: FutureRecord<P, K>, block_ms: i64) -> DeliveryFuture","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided [FutureRecord]. Returns a [DeliveryFuture] that will eventually contain the\n result of the send. The `block_ms` parameter will control for how long the producer\n is allowed to block if the queue is full. Set it to -1 to block forever, or 0 to never block.\n If `block_ms` is reached and the queue is still full, a [RDKafkaError::QueueFull] will be\n reported in the [DeliveryFuture].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":130843,"byte_end":130854,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"send_result","qualname":"<FutureProducer<C>>::send_result","value":"fn <'a, K, P> (&self, record: FutureRecord<'a, K, P>) -> Result<DeliveryFuture, (KafkaError, FutureRecord<'a, K, P>)>","parent":null,"children":[],"decl_id":null,"docs":" Same as [FutureProducer::send], with the only difference that if enqueuing fails, an\n error will be returned immediately, alongside the [FutureRecord] provided.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":131478,"byte_end":131482,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"poll","qualname":"<FutureProducer<C>>::poll","value":"fn <T> (&self, timeout: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Polls the internal producer. This is not normally required since the `ThreadedProducer` had\n a thread dedicated to calling `poll` regularly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":131653,"byte_end":131658,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"flush","qualname":"<FutureProducer<C>>::flush","value":"fn <T> (&self, timeout: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flushes the producer. Should be called before termination.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":131856,"byte_end":131871,"line_start":267,"line_end":267,"column_start":12,"column_end":27},"name":"in_flight_count","qualname":"<FutureProducer<C>>::in_flight_count","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages waiting to be sent, or send but not acknowledged yet.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1308},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"statistics","qualname":"::statistics","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/statistics.rs","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1860},{"krate":0,"index":1866},{"krate":0,"index":1862},{"krate":0,"index":1910},{"krate":0,"index":1916},{"krate":0,"index":1912},{"krate":0,"index":1960},{"krate":0,"index":1966},{"krate":0,"index":1962},{"krate":0,"index":2010},{"krate":0,"index":2016},{"krate":0,"index":2012},{"krate":0,"index":2060},{"krate":0,"index":2066},{"krate":0,"index":2062},{"krate":0,"index":2110},{"krate":0,"index":2116},{"krate":0,"index":2112},{"krate":0,"index":2160},{"krate":0,"index":2166},{"krate":0,"index":2162}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133145,"byte_end":133168,"line_start":2,"line_end":2,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133387,"byte_end":133397,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"Statistics","qualname":"::statistics::Statistics","value":"Statistics { name, client_type, ts, time, replyq, msg_cnt, msg_size, msg_max, msg_size_max, simple_cnt, brokers, topics, cgrp }","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705}],"decl_id":null,"docs":" Statistics from librdkafka. Refer to the [librdkafka documentation](https://github.com/edenhill/librdkafka/wiki/Statistics)\n for details.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":681},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133408,"byte_end":133412,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"name","qualname":"::statistics::Statistics::name","value":"std::string::String","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133460,"byte_end":133471,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"name":"client_type","qualname":"::statistics::Statistics::client_type","value":"std::string::String","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"type\")","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133426,"byte_end":133451,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":685},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133489,"byte_end":133491,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"ts","qualname":"::statistics::Statistics::ts","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":687},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133506,"byte_end":133510,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"time","qualname":"::statistics::Statistics::time","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":689},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133525,"byte_end":133531,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"replyq","qualname":"::statistics::Statistics::replyq","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":691},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133546,"byte_end":133553,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"msg_cnt","qualname":"::statistics::Statistics::msg_cnt","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":693},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133568,"byte_end":133576,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"msg_size","qualname":"::statistics::Statistics::msg_size","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":695},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133591,"byte_end":133598,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"msg_max","qualname":"::statistics::Statistics::msg_max","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":697},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133613,"byte_end":133625,"line_start":19,"line_end":19,"column_start":9,"column_end":21},"name":"msg_size_max","qualname":"::statistics::Statistics::msg_size_max","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":699},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133640,"byte_end":133650,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"simple_cnt","qualname":"::statistics::Statistics::simple_cnt","value":"i64","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":701},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133665,"byte_end":133672,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"brokers","qualname":"::statistics::Statistics::brokers","value":"std::collections::HashMap<std::string::String, statistics::Broker>","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133707,"byte_end":133713,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"topics","qualname":"::statistics::Statistics::topics","value":"std::collections::HashMap<std::string::String, statistics::Topic>","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133747,"byte_end":133751,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"cgrp","qualname":"::statistics::Statistics::cgrp","value":"std::option::Option<statistics::ConsumerGroup>","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133818,"byte_end":133824,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Broker","qualname":"::statistics::Broker","value":"Broker { name, nodeid, state, stateage, outbuf_cnt, outbuf_msg_cnt, waitresp_cnt, waitresp_msg_cnt, tx, txbytes, txerrs, txretries, req_timeouts, rx, rxbytes, rxerrs, rxcorriderrs, rxpartial, zbuf_grow, buf_grow, wakeups, int_latency, rtt, throttle, toppars }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":765},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133835,"byte_end":133839,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"name","qualname":"::statistics::Broker::name","value":"std::string::String","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":767},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133857,"byte_end":133863,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"name":"nodeid","qualname":"::statistics::Broker::nodeid","value":"i32","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":769},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133878,"byte_end":133883,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"state","qualname":"::statistics::Broker::state","value":"std::string::String","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":771},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133901,"byte_end":133909,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"name":"stateage","qualname":"::statistics::Broker::stateage","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":773},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133924,"byte_end":133934,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"outbuf_cnt","qualname":"::statistics::Broker::outbuf_cnt","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":775},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133949,"byte_end":133963,"line_start":33,"line_end":33,"column_start":9,"column_end":23},"name":"outbuf_msg_cnt","qualname":"::statistics::Broker::outbuf_msg_cnt","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":777},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133978,"byte_end":133990,"line_start":34,"line_end":34,"column_start":9,"column_end":21},"name":"waitresp_cnt","qualname":"::statistics::Broker::waitresp_cnt","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":779},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134005,"byte_end":134021,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"name":"waitresp_msg_cnt","qualname":"::statistics::Broker::waitresp_msg_cnt","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":781},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134036,"byte_end":134038,"line_start":36,"line_end":36,"column_start":9,"column_end":11},"name":"tx","qualname":"::statistics::Broker::tx","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":783},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134053,"byte_end":134060,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"txbytes","qualname":"::statistics::Broker::txbytes","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":785},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134075,"byte_end":134081,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"txerrs","qualname":"::statistics::Broker::txerrs","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":787},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134096,"byte_end":134105,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"name":"txretries","qualname":"::statistics::Broker::txretries","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":789},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134120,"byte_end":134132,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"name":"req_timeouts","qualname":"::statistics::Broker::req_timeouts","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":791},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134147,"byte_end":134149,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"rx","qualname":"::statistics::Broker::rx","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":793},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134164,"byte_end":134171,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"name":"rxbytes","qualname":"::statistics::Broker::rxbytes","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":795},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134186,"byte_end":134192,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"rxerrs","qualname":"::statistics::Broker::rxerrs","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":797},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134207,"byte_end":134219,"line_start":44,"line_end":44,"column_start":9,"column_end":21},"name":"rxcorriderrs","qualname":"::statistics::Broker::rxcorriderrs","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134234,"byte_end":134243,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"name":"rxpartial","qualname":"::statistics::Broker::rxpartial","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":801},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134258,"byte_end":134267,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"name":"zbuf_grow","qualname":"::statistics::Broker::zbuf_grow","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":803},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134282,"byte_end":134290,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"buf_grow","qualname":"::statistics::Broker::buf_grow","value":"i64","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":805},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134305,"byte_end":134312,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"wakeups","qualname":"::statistics::Broker::wakeups","value":"std::option::Option<i64>","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":807},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134335,"byte_end":134346,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"int_latency","qualname":"::statistics::Broker::int_latency","value":"std::option::Option<statistics::Window>","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":809},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134372,"byte_end":134375,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"rtt","qualname":"::statistics::Broker::rtt","value":"std::option::Option<statistics::Window>","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134401,"byte_end":134409,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"throttle","qualname":"::statistics::Broker::throttle","value":"std::option::Option<statistics::Window>","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":813},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134435,"byte_end":134442,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"toppars","qualname":"::statistics::Broker::toppars","value":"std::collections::HashMap<std::string::String, statistics::TopicPartition>","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1960},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134519,"byte_end":134525,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Window","qualname":"::statistics::Window","value":"Window { min, max, avg, sum, cnt }","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":897},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134536,"byte_end":134539,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"name":"min","qualname":"::statistics::Window::min","value":"i64","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":899},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134554,"byte_end":134557,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"name":"max","qualname":"::statistics::Window::max","value":"i64","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":901},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134572,"byte_end":134575,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"name":"avg","qualname":"::statistics::Window::avg","value":"i64","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":903},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134590,"byte_end":134593,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"sum","qualname":"::statistics::Window::sum","value":"i64","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":905},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134608,"byte_end":134611,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"name":"cnt","qualname":"::statistics::Window::cnt","value":"i64","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2010},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134660,"byte_end":134674,"line_start":65,"line_end":65,"column_start":12,"column_end":26},"name":"TopicPartition","qualname":"::statistics::TopicPartition","value":"TopicPartition { topic, partition }","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":951}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":949},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134685,"byte_end":134690,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"topic","qualname":"::statistics::TopicPartition::topic","value":"std::string::String","parent":{"krate":0,"index":2010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":951},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134708,"byte_end":134717,"line_start":67,"line_end":67,"column_start":9,"column_end":18},"name":"partition","qualname":"::statistics::TopicPartition::partition","value":"i32","parent":{"krate":0,"index":2010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2060},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134766,"byte_end":134771,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Topic","qualname":"::statistics::Topic","value":"Topic { topic, metadata_age, partitions }","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134782,"byte_end":134787,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"name":"topic","qualname":"::statistics::Topic::topic","value":"std::string::String","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":991},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134805,"byte_end":134817,"line_start":73,"line_end":73,"column_start":9,"column_end":21},"name":"metadata_age","qualname":"::statistics::Topic::metadata_age","value":"i64","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":993},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134832,"byte_end":134842,"line_start":74,"line_end":74,"column_start":9,"column_end":19},"name":"partitions","qualname":"::statistics::Topic::partitions","value":"std::collections::HashMap<i32, statistics::Partition>","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2110},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134911,"byte_end":134920,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"Partition","qualname":"::statistics::Partition","value":"Partition { partition, leader, desired, unknown, msgq_cnt, msgq_bytes, xmit_msgq_cnt, xmit_msgq_bytes, fetchq_cnt, fetchq_size, fetch_state, query_offset, next_offset, app_offset, stored_offset, committed_offset, eof_offset, lo_offset, hi_offset, consumer_lag, txmsgs, txbytes, msgs, rx_ver_drops }","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1033},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134931,"byte_end":134940,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"name":"partition","qualname":"::statistics::Partition::partition","value":"i32","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1035},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134955,"byte_end":134961,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"leader","qualname":"::statistics::Partition::leader","value":"i32","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1037},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134976,"byte_end":134983,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"desired","qualname":"::statistics::Partition::desired","value":"bool","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1039},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134999,"byte_end":135006,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"name":"unknown","qualname":"::statistics::Partition::unknown","value":"bool","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1041},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135022,"byte_end":135030,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"name":"msgq_cnt","qualname":"::statistics::Partition::msgq_cnt","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1043},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135045,"byte_end":135055,"line_start":84,"line_end":84,"column_start":9,"column_end":19},"name":"msgq_bytes","qualname":"::statistics::Partition::msgq_bytes","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1045},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135070,"byte_end":135083,"line_start":85,"line_end":85,"column_start":9,"column_end":22},"name":"xmit_msgq_cnt","qualname":"::statistics::Partition::xmit_msgq_cnt","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1047},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135098,"byte_end":135113,"line_start":86,"line_end":86,"column_start":9,"column_end":24},"name":"xmit_msgq_bytes","qualname":"::statistics::Partition::xmit_msgq_bytes","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1049},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135128,"byte_end":135138,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"name":"fetchq_cnt","qualname":"::statistics::Partition::fetchq_cnt","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1051},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135153,"byte_end":135164,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"name":"fetchq_size","qualname":"::statistics::Partition::fetchq_size","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1053},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135179,"byte_end":135190,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"name":"fetch_state","qualname":"::statistics::Partition::fetch_state","value":"std::string::String","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1055},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135208,"byte_end":135220,"line_start":90,"line_end":90,"column_start":9,"column_end":21},"name":"query_offset","qualname":"::statistics::Partition::query_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1057},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135235,"byte_end":135246,"line_start":91,"line_end":91,"column_start":9,"column_end":20},"name":"next_offset","qualname":"::statistics::Partition::next_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1059},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135261,"byte_end":135271,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"name":"app_offset","qualname":"::statistics::Partition::app_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135286,"byte_end":135299,"line_start":93,"line_end":93,"column_start":9,"column_end":22},"name":"stored_offset","qualname":"::statistics::Partition::stored_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1063},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135314,"byte_end":135330,"line_start":94,"line_end":94,"column_start":9,"column_end":25},"name":"committed_offset","qualname":"::statistics::Partition::committed_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1065},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135345,"byte_end":135355,"line_start":95,"line_end":95,"column_start":9,"column_end":19},"name":"eof_offset","qualname":"::statistics::Partition::eof_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135370,"byte_end":135379,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"lo_offset","qualname":"::statistics::Partition::lo_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1069},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135394,"byte_end":135403,"line_start":97,"line_end":97,"column_start":9,"column_end":18},"name":"hi_offset","qualname":"::statistics::Partition::hi_offset","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1071},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135418,"byte_end":135430,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"name":"consumer_lag","qualname":"::statistics::Partition::consumer_lag","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1073},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135445,"byte_end":135451,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"txmsgs","qualname":"::statistics::Partition::txmsgs","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1075},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135466,"byte_end":135473,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"name":"txbytes","qualname":"::statistics::Partition::txbytes","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1077},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135488,"byte_end":135492,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"msgs","qualname":"::statistics::Partition::msgs","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1079},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135507,"byte_end":135519,"line_start":102,"line_end":102,"column_start":9,"column_end":21},"name":"rx_ver_drops","qualname":"::statistics::Partition::rx_ver_drops","value":"i64","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2160},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135568,"byte_end":135581,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"ConsumerGroup","qualname":"::statistics::ConsumerGroup","value":"ConsumerGroup { rebalance_age, rebalance_cnt, assignment_size }","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1161},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135592,"byte_end":135605,"line_start":107,"line_end":107,"column_start":9,"column_end":22},"name":"rebalance_age","qualname":"::statistics::ConsumerGroup::rebalance_age","value":"i64","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1163},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135620,"byte_end":135633,"line_start":108,"line_end":108,"column_start":9,"column_end":22},"name":"rebalance_cnt","qualname":"::statistics::ConsumerGroup::rebalance_cnt","value":"i64","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1165},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135648,"byte_end":135663,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"name":"assignment_size","qualname":"::statistics::ConsumerGroup::assignment_size","value":"i32","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1312},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"topic_partition_list","qualname":"::topic_partition_list","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/topic_partition_list.rs","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":2210},{"krate":0,"index":2230},{"krate":0,"index":2226},{"krate":0,"index":2222},{"krate":0,"index":2216},{"krate":0,"index":2212},{"krate":0,"index":1350},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1372},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1382},{"krate":0,"index":1420},{"krate":0,"index":1424},{"krate":0,"index":1428},{"krate":0,"index":1432}],"decl_id":null,"docs":" A data structure representing topic, partitions and offsets, compatible with the\n `RDKafkaTopicPartitionList` exported by `rdkafka-sys`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148250,"byte_end":148259,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Beginning","qualname":"::topic_partition_list::Offset::Beginning","value":"Offset::Beginning","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":" Start consuming from the beginning of the partition.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148320,"byte_end":148323,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"End","qualname":"::topic_partition_list::Offset::End","value":"Offset::End","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":" Start consuming from the end of the partition.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148377,"byte_end":148383,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Stored","qualname":"::topic_partition_list::Offset::Stored","value":"Offset::Stored","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":" Start consuming from the stored offset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148429,"byte_end":148436,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::topic_partition_list::Offset::Invalid","value":"Offset::Invalid","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":" Offset not assigned or invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148485,"byte_end":148491,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Offset","qualname":"::topic_partition_list::Offset::Offset","value":"Offset::Offset(i64)","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":" A specific offset to consume from.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2210},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148176,"byte_end":148182,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"name":"Offset","qualname":"::topic_partition_list::Offset","value":"Offset::{Beginning, End, Stored, Invalid, Offset}","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213}],"decl_id":null,"docs":" A librdkafka offset.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148167,"byte_end":148498,"line_start":23,"line_end":34,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148167,"byte_end":148498,"line_start":23,"line_end":34,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148616,"byte_end":148624,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<Offset>::from_raw","value":"fn (raw_offset: i64) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Converts the integer representation of an offset use by librdkafka to an `Offset`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":149015,"byte_end":149021,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"to_raw","qualname":"<Offset>::to_raw","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Converts the `Offset` to the internal integer representation used by librdkafka.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":149378,"byte_end":149400,"line_start":62,"line_end":62,"column_start":12,"column_end":34},"name":"TopicPartitionListElem","qualname":"::topic_partition_list::TopicPartitionListElem","value":"TopicPartitionListElem {  }","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":371}],"decl_id":null,"docs":" One element of the topic partition list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":149781,"byte_end":149786,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"topic","qualname":"<TopicPartitionListElem<'a>>::topic","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the topic name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":150049,"byte_end":150054,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"error","qualname":"<TopicPartitionListElem<'a>>::error","value":"fn (&self) -> KafkaResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns the optional error associated to the specific entry in the TPL.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":150330,"byte_end":150339,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"partition","qualname":"<TopicPartitionListElem<'a>>::partition","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the partition number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":150443,"byte_end":150449,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"offset","qualname":"<TopicPartitionListElem<'a>>::offset","value":"fn (&self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":150605,"byte_end":150615,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<TopicPartitionListElem<'a>>::set_offset","value":"fn (&self, offset: Offset) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the offset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1376},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151112,"byte_end":151130,"line_start":120,"line_end":120,"column_start":12,"column_end":30},"name":"TopicPartitionList","qualname":"::topic_partition_list::TopicPartitionList","value":"TopicPartitionList {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" A structure to store and manipulate a list of topics and partitions with optional offsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151488,"byte_end":151491,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<TopicPartitionList>::new","value":"fn () -> TopicPartitionList","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty list with default capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151643,"byte_end":151656,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<TopicPartitionList>::with_capacity","value":"fn (capacity: usize) -> TopicPartitionList","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty list with the specified capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151993,"byte_end":152001,"line_start":145,"line_end":145,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<TopicPartitionList>::from_ptr","value":"fn (ptr: *mut RDKafkaTopicPartitionList) -> TopicPartitionList","parent":null,"children":[],"decl_id":null,"docs":" Transforms a pointer to the native librdkafka RDTopicPartitionList into a\n managed `TopicPartitionList` instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":152181,"byte_end":152195,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"from_topic_map","qualname":"<TopicPartitionList>::from_topic_map","value":"fn (topic_map: &HashMap<(String, i32), Offset>) -> TopicPartitionList","parent":null,"children":[],"decl_id":null,"docs":" Given a topic map, generates a new `TopicPartitionList`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":152632,"byte_end":152635,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"ptr","qualname":"<TopicPartitionList>::ptr","value":"fn (&self) -> *mut RDKafkaTopicPartitionList","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer to the internal librdkafka structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":152827,"byte_end":152831,"line_start":166,"line_end":166,"column_start":19,"column_end":23},"name":"leak","qualname":"<TopicPartitionList>::leak","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Capture the instance without calling the destructor on the internal librdkafka\n structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":152950,"byte_end":152955,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"count","qualname":"<TopicPartitionList>::count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":153078,"byte_end":153086,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"capacity","qualname":"<TopicPartitionList>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":153229,"byte_end":153249,"line_start":181,"line_end":181,"column_start":12,"column_end":32},"name":"add_topic_unassigned","qualname":"<TopicPartitionList>::add_topic_unassigned","value":"fn <'a> (&'a mut self, topic: &str) -> TopicPartitionListElem<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a topic with unassigned partitions to the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":153435,"byte_end":153448,"line_start":186,"line_end":186,"column_start":12,"column_end":25},"name":"add_partition","qualname":"<TopicPartitionList>::add_partition","value":"fn <'a> (&'a mut self, topic: &str, partition: i32) -> TopicPartitionListElem<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a topic and partition to the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":153876,"byte_end":153895,"line_start":195,"line_end":195,"column_start":12,"column_end":31},"name":"add_partition_range","qualname":"<TopicPartitionList>::add_partition_range","value":"fn (&mut self, topic: &str, start_partition: i32, stop_partition: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a topic and partition range to the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":154351,"byte_end":154371,"line_start":205,"line_end":205,"column_start":12,"column_end":32},"name":"set_partition_offset","qualname":"<TopicPartitionList>::set_partition_offset","value":"fn (&mut self, topic: &str, partition: i32, offset: Offset) -> KafkaResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the offset for an already created topic partition. It will fail if the topic partition\n isn't in the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":154942,"byte_end":154962,"line_start":220,"line_end":220,"column_start":12,"column_end":32},"name":"add_partition_offset","qualname":"<TopicPartitionList>::add_partition_offset","value":"fn (&mut self, topic: &str, partition: i32, offset: Offset) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a topic and partition to the list, with the specified offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":155265,"byte_end":155279,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"find_partition","qualname":"<TopicPartitionList>::find_partition","value":"fn (&self, topic: &str, partition: i32) -> Option<TopicPartitionListElem>","parent":null,"children":[],"decl_id":null,"docs":" Given a topic name and a partition number, returns the corresponding list element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":155802,"byte_end":155817,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"set_all_offsets","qualname":"<TopicPartitionList>::set_all_offsets","value":"fn (&mut self, offset: Offset) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all partitions in the list to the specified offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":156171,"byte_end":156179,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"elements","qualname":"<TopicPartitionList>::elements","value":"fn (&self) -> Vec<TopicPartitionListElem>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the elements of the list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":156608,"byte_end":156626,"line_start":258,"line_end":258,"column_start":12,"column_end":30},"name":"elements_for_topic","qualname":"<TopicPartitionList>::elements_for_topic","value":"fn <'a> (&'a self, topic: &str) -> Vec<TopicPartitionListElem<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the elements of the list that belong to the specified topic.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":157138,"byte_end":157150,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"to_topic_map","qualname":"<TopicPartitionList>::to_topic_map","value":"fn (&self) -> HashMap<(String, i32), Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a hashmap-based representation of the list.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1436},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/z002qqy/.cargo/registry/src/github.com-1ecc6299db9ec823/rdkafka-0.17.0/src/util.rs","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1476},{"krate":0,"index":1482},{"krate":0,"index":1488},{"krate":0,"index":1494},{"krate":0,"index":1496}],"decl_id":null,"docs":" Utility functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1456},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":162926,"byte_end":162945,"line_start":12,"line_end":12,"column_start":8,"column_end":27},"name":"get_rdkafka_version","qualname":"::util::get_rdkafka_version","value":"fn () -> (u16, String)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple representing the version of `librdkafka` in\n hexadecimal and string format.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1458},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":163222,"byte_end":163240,"line_start":19,"line_end":19,"column_start":8,"column_end":26},"name":"duration_to_millis","qualname":"::util::duration_to_millis","value":"fn (duration: Duration) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Converts a Duration into milliseconds\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1462},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":163660,"byte_end":163675,"line_start":32,"line_end":32,"column_start":8,"column_end":23},"name":"millis_to_epoch","qualname":"::util::millis_to_epoch","value":"fn (time: SystemTime) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Converts the given time to milliseconds since unix epoch.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1464},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":163898,"byte_end":163917,"line_start":39,"line_end":39,"column_start":8,"column_end":27},"name":"current_time_millis","qualname":"::util::current_time_millis","value":"fn () -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current time in millis since unix epoch.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1470},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":164807,"byte_end":164817,"line_start":65,"line_end":65,"column_start":11,"column_end":21},"name":"IntoOpaque","qualname":"::util::IntoOpaque","value":"IntoOpaque: Send + Sync","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1474}],"decl_id":null,"docs":" A trait for the conversion of Rust data to raw pointers. This conversion is used\n to pass opaque objects to the C library and vice versa.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":164888,"byte_end":164894,"line_start":67,"line_end":67,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::util::IntoOpaque::as_ptr","value":"fn (&self) -> *mut c_void","parent":{"krate":0,"index":1470},"children":[],"decl_id":null,"docs":" Converts the object into a raw pointer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":164999,"byte_end":165007,"line_start":69,"line_end":69,"column_start":15,"column_end":23},"name":"from_ptr","qualname":"::util::IntoOpaque::from_ptr","value":"fn (*mut c_void) -> Self","parent":{"krate":0,"index":1470},"children":[],"decl_id":null,"docs":" Converts the raw pointer back to the original Rust object.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1494},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":165802,"byte_end":165821,"line_start":105,"line_end":105,"column_start":15,"column_end":34},"name":"bytes_cstr_to_owned","qualname":"::util::bytes_cstr_to_owned","value":"fn (bytes_cstr: &[i8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a byte array representing a C string into a String.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1496},"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":165980,"byte_end":165993,"line_start":110,"line_end":110,"column_start":15,"column_end":28},"name":"cstr_to_owned","qualname":"::util::cstr_to_owned","value":"fn (cstr: *const i8) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a C string into a String.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13108,"byte_end":13128,"line_start":66,"line_end":66,"column_start":24,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13451,"byte_end":13463,"line_start":79,"line_end":79,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13488,"byte_end":13500,"line_start":80,"line_end":80,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13510,"byte_end":13522,"line_start":82,"line_end":82,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13830,"byte_end":13842,"line_start":94,"line_end":94,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":14411,"byte_end":14417,"line_start":112,"line_end":112,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":19618,"byte_end":19629,"line_start":241,"line_end":241,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":19654,"byte_end":19665,"line_start":242,"line_end":242,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":19675,"byte_end":19686,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":20147,"byte_end":20158,"line_start":261,"line_end":261,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24762,"byte_end":24777,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":25367,"byte_end":25385,"line_start":81,"line_end":81,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26161,"byte_end":26179,"line_start":102,"line_end":102,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26597,"byte_end":26609,"line_start":117,"line_end":117,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26673,"byte_end":26685,"line_start":123,"line_end":123,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":40706,"byte_end":40718,"line_start":67,"line_end":67,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":41005,"byte_end":41017,"line_start":74,"line_end":74,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":41663,"byte_end":41675,"line_start":87,"line_end":87,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":44422,"byte_end":44434,"line_start":167,"line_end":167,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":50756,"byte_end":50768,"line_start":342,"line_end":342,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":51322,"byte_end":51326,"line_start":355,"line_end":355,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":53278,"byte_end":53294,"line_start":37,"line_end":37,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":54071,"byte_end":54087,"line_start":54,"line_end":54,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":54547,"byte_end":54563,"line_start":66,"line_end":66,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":55224,"byte_end":55237,"line_start":80,"line_end":80,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":55468,"byte_end":55481,"line_start":86,"line_end":86,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58055,"byte_end":58069,"line_start":150,"line_end":150,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58200,"byte_end":58214,"line_start":156,"line_end":156,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58507,"byte_end":58521,"line_start":163,"line_end":163,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58935,"byte_end":58949,"line_start":174,"line_end":174,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":60742,"byte_end":60756,"line_start":214,"line_end":214,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33197,"byte_end":33219,"line_start":100,"line_end":100,"column_start":24,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33248,"byte_end":33270,"line_start":101,"line_end":101,"column_start":26,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61409,"byte_end":61423,"line_start":18,"line_end":18,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61557,"byte_end":61571,"line_start":24,"line_end":24,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62848,"byte_end":62858,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":64556,"byte_end":64566,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":66095,"byte_end":66105,"line_start":111,"line_end":111,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":68268,"byte_end":68278,"line_start":154,"line_end":154,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":68575,"byte_end":68590,"line_start":12,"line_end":12,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70089,"byte_end":70098,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71260,"byte_end":71269,"line_start":102,"line_end":102,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71568,"byte_end":71577,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71998,"byte_end":72007,"line_start":124,"line_end":124,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72674,"byte_end":72683,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73192,"byte_end":73201,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73327,"byte_end":73336,"line_start":51,"line_end":51,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76256,"byte_end":76271,"line_start":131,"line_end":131,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76744,"byte_end":76759,"line_start":147,"line_end":147,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":79006,"byte_end":79021,"line_start":203,"line_end":203,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":79163,"byte_end":79178,"line_start":210,"line_end":210,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":82138,"byte_end":82153,"line_start":278,"line_end":278,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84112,"byte_end":84127,"line_start":337,"line_end":337,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84684,"byte_end":84696,"line_start":358,"line_end":358,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84706,"byte_end":84718,"line_start":360,"line_end":360,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86191,"byte_end":86203,"line_start":402,"line_end":402,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86417,"byte_end":86429,"line_start":412,"line_end":412,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86585,"byte_end":86597,"line_start":420,"line_end":420,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87144,"byte_end":87156,"line_start":441,"line_end":441,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87600,"byte_end":87612,"line_start":456,"line_end":456,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89462,"byte_end":89465,"line_start":538,"line_end":538,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89556,"byte_end":89562,"line_start":544,"line_end":544,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":91759,"byte_end":91773,"line_start":13,"line_end":13,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92313,"byte_end":92330,"line_start":37,"line_end":37,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93286,"byte_end":93299,"line_start":72,"line_end":72,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94234,"byte_end":94242,"line_start":101,"line_end":101,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":95399,"byte_end":95407,"line_start":132,"line_end":132,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":105195,"byte_end":105217,"line_start":81,"line_end":81,"column_start":24,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":105246,"byte_end":105268,"line_start":82,"line_end":82,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108338,"byte_end":108348,"line_start":161,"line_end":161,"column_start":67,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":109678,"byte_end":109688,"line_start":206,"line_end":206,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":110077,"byte_end":110089,"line_start":221,"line_end":221,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":110427,"byte_end":110439,"line_start":228,"line_end":228,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":112400,"byte_end":112412,"line_start":277,"line_end":277,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":116294,"byte_end":116306,"line_start":356,"line_end":356,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":117071,"byte_end":117087,"line_start":378,"line_end":378,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":117375,"byte_end":117391,"line_start":384,"line_end":384,"column_start":70,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":117849,"byte_end":117865,"line_start":396,"line_end":396,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":120667,"byte_end":120683,"line_start":464,"line_end":464,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122709,"byte_end":122721,"line_start":41,"line_end":41,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":125520,"byte_end":125541,"line_start":123,"line_end":123,"column_start":52,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":125956,"byte_end":125977,"line_start":137,"line_end":137,"column_start":54,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127331,"byte_end":127345,"line_start":163,"line_end":163,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127488,"byte_end":127502,"line_start":169,"line_end":169,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127734,"byte_end":127748,"line_start":175,"line_end":175,"column_start":68,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":128395,"byte_end":128409,"line_start":191,"line_end":191,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":128600,"byte_end":128614,"line_start":200,"line_end":200,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133356,"byte_end":133367,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133787,"byte_end":133798,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134488,"byte_end":134499,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134629,"byte_end":134640,"line_start":64,"line_end":64,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134735,"byte_end":134746,"line_start":70,"line_end":70,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134880,"byte_end":134891,"line_start":77,"line_end":77,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135537,"byte_end":135548,"line_start":105,"line_end":105,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148505,"byte_end":148511,"line_start":36,"line_end":36,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":149497,"byte_end":149519,"line_start":67,"line_end":67,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":150767,"byte_end":150789,"line_start":111,"line_end":111,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151192,"byte_end":151210,"line_start":124,"line_end":124,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151400,"byte_end":151418,"line_start":131,"line_end":131,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":157357,"byte_end":157375,"line_start":278,"line_end":278,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":157659,"byte_end":157677,"line_start":288,"line_end":288,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":158118,"byte_end":158136,"line_start":304,"line_end":304,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":158215,"byte_end":158233,"line_start":310,"line_end":310,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":165429,"byte_end":165432,"line_start":92,"line_end":92,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10026,"byte_end":10032,"line_start":229,"line_end":229,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10042,"byte_end":10048,"line_start":230,"line_end":230,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":140}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10058,"byte_end":10066,"line_start":231,"line_end":231,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":214}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":29820,"byte_end":29833,"line_start":2,"line_end":2,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":216}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":29843,"byte_end":29858,"line_start":3,"line_end":3,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10076,"byte_end":10081,"line_start":232,"line_end":232,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":570}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10091,"byte_end":10097,"line_start":233,"line_end":233,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":616}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10107,"byte_end":10114,"line_start":234,"line_end":234,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":672}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10124,"byte_end":10132,"line_start":235,"line_end":235,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":912}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10142,"byte_end":10150,"line_start":236,"line_end":236,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":976}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101285,"byte_end":101298,"line_start":78,"line_end":78,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":978}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,109,111,100,46,114,115],"byte_start":101308,"byte_end":101323,"line_start":79,"line_end":79,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":1142}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10160,"byte_end":10170,"line_start":237,"line_end":237,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1308}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10180,"byte_end":10200,"line_start":238,"line_end":238,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":1312}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10210,"byte_end":10214,"line_start":239,"line_end":239,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1436}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":11444,"byte_end":11448,"line_start":29,"line_end":29,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1650},"to":{"krate":0,"index":70}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":11451,"byte_end":11455,"line_start":29,"line_end":29,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1662},"to":{"krate":0,"index":70}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13108,"byte_end":13128,"line_start":66,"line_end":66,"column_start":24,"column_end":44},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1532},"to":{"krate":0,"index":70}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13451,"byte_end":13463,"line_start":79,"line_end":79,"column_start":22,"column_end":34},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":80},"to":{"krate":2,"index":1662}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13488,"byte_end":13500,"line_start":80,"line_end":80,"column_start":22,"column_end":34},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":80},"to":{"krate":2,"index":1650}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13510,"byte_end":13522,"line_start":82,"line_end":82,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":13830,"byte_end":13842,"line_start":94,"line_end":94,"column_start":15,"column_end":27},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":80},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":14411,"byte_end":14417,"line_start":112,"line_end":112,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":19618,"byte_end":19629,"line_start":241,"line_end":241,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1650}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":19654,"byte_end":19665,"line_start":242,"line_end":242,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1662}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":19675,"byte_end":19686,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,108,105,101,110,116,46,114,115],"byte_start":20147,"byte_end":20158,"line_start":261,"line_end":261,"column_start":15,"column_end":26},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":24762,"byte_end":24777,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":25367,"byte_end":25385,"line_start":81,"line_end":81,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26161,"byte_end":26179,"line_start":102,"line_end":102,"column_start":15,"column_end":33},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":172},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26597,"byte_end":26609,"line_start":117,"line_end":117,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1578},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":26673,"byte_end":26685,"line_start":123,"line_end":123,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":29311,"byte_end":29316,"line_start":191,"line_end":191,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1656},"to":{"krate":0,"index":206}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":29599,"byte_end":29604,"line_start":197,"line_end":197,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":1656},"to":{"krate":0,"index":210}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":40706,"byte_end":40718,"line_start":67,"line_end":67,"column_start":27,"column_end":39},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":288},"to":{"krate":0,"index":206}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":41005,"byte_end":41017,"line_start":74,"line_end":74,"column_start":60,"column_end":72},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":288},"to":{"krate":0,"index":210}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":41663,"byte_end":41675,"line_start":87,"line_end":87,"column_start":26,"column_end":38},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":44422,"byte_end":44434,"line_start":167,"line_end":167,"column_start":42,"column_end":54},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":288},"to":{"krate":0,"index":536}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":50756,"byte_end":50768,"line_start":342,"line_end":342,"column_start":35,"column_end":47},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":288},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,98,97,115,101,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":51322,"byte_end":51326,"line_start":355,"line_end":355,"column_start":48,"column_end":52},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":344},"to":{"krate":2,"index":3844}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":53278,"byte_end":53294,"line_start":37,"line_end":37,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":54071,"byte_end":54087,"line_start":54,"line_end":54,"column_start":15,"column_end":31},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":54547,"byte_end":54563,"line_start":66,"line_end":66,"column_start":22,"column_end":38},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1650}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":55224,"byte_end":55237,"line_start":80,"line_end":80,"column_start":40,"column_end":53},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":55468,"byte_end":55481,"line_start":86,"line_end":86,"column_start":46,"column_end":59},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":444},"to":{"krate":18,"index":2046}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58055,"byte_end":58069,"line_start":150,"line_end":150,"column_start":42,"column_end":56},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":460},"to":{"krate":0,"index":536}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58200,"byte_end":58214,"line_start":156,"line_end":156,"column_start":27,"column_end":41},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":460},"to":{"krate":0,"index":206}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58507,"byte_end":58521,"line_start":163,"line_end":163,"column_start":60,"column_end":74},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":460},"to":{"krate":0,"index":210}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":58935,"byte_end":58949,"line_start":174,"line_end":174,"column_start":26,"column_end":40},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,115,116,114,101,97,109,95,99,111,110,115,117,109,101,114,46,114,115],"byte_start":60742,"byte_end":60756,"line_start":214,"line_end":214,"column_start":35,"column_end":49},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":460},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":30758,"byte_end":30771,"line_start":37,"line_end":37,"column_start":28,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":70},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33197,"byte_end":33219,"line_start":100,"line_end":100,"column_start":24,"column_end":46},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1626},"to":{"krate":0,"index":70}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,99,111,110,115,117,109,101,114,47,109,111,100,46,114,115],"byte_start":33248,"byte_end":33270,"line_start":101,"line_end":101,"column_start":26,"column_end":48},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1626},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61409,"byte_end":61423,"line_start":18,"line_end":18,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":19,"index":3202},"to":{"krate":0,"index":586}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":61557,"byte_end":61571,"line_start":24,"line_end":24,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":19,"index":3294},"to":{"krate":0,"index":586}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":62848,"byte_end":62858,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":7992}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":64556,"byte_end":64566,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":7996}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":66095,"byte_end":66105,"line_start":111,"line_end":111,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1632},"to":{"krate":1,"index":2344}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":68268,"byte_end":68278,"line_start":154,"line_end":154,"column_start":30,"column_end":40},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":68575,"byte_end":68590,"line_start":12,"line_end":12,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":70089,"byte_end":70098,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71260,"byte_end":71269,"line_start":102,"line_end":102,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":642},"to":{"krate":2,"index":7992}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71568,"byte_end":71577,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,103,114,111,117,112,115,46,114,115],"byte_start":71998,"byte_end":72007,"line_start":124,"line_end":124,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":660},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":72674,"byte_end":72683,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73192,"byte_end":73201,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":73327,"byte_end":73336,"line_start":51,"line_end":51,"column_start":27,"column_end":36},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76256,"byte_end":76271,"line_start":131,"line_end":131,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":76744,"byte_end":76759,"line_start":147,"line_end":147,"column_start":18,"column_end":33},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":752},"to":{"krate":0,"index":722}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":79006,"byte_end":79021,"line_start":203,"line_end":203,"column_start":25,"column_end":40},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":768},"to":{"krate":2,"index":7992}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":79163,"byte_end":79178,"line_start":210,"line_end":210,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":82138,"byte_end":82153,"line_start":278,"line_end":278,"column_start":22,"column_end":37},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":768},"to":{"krate":0,"index":730}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84112,"byte_end":84127,"line_start":337,"line_end":337,"column_start":19,"column_end":34},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":768},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84684,"byte_end":84696,"line_start":358,"line_end":358,"column_start":22,"column_end":34},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":1650}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":84706,"byte_end":84718,"line_start":360,"line_end":360,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86191,"byte_end":86203,"line_start":402,"line_end":402,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1672},"to":{"krate":0,"index":722}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86417,"byte_end":86429,"line_start":412,"line_end":412,"column_start":16,"column_end":28},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2516}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":86585,"byte_end":86597,"line_start":420,"line_end":420,"column_start":15,"column_end":27},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87144,"byte_end":87156,"line_start":441,"line_end":441,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":1678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":87600,"byte_end":87612,"line_start":456,"line_end":456,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":730}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89462,"byte_end":89465,"line_start":538,"line_end":538,"column_start":18,"column_end":21},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":4,"index":4428},"to":{"krate":0,"index":882}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":89556,"byte_end":89562,"line_start":544,"line_end":544,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":4,"index":5432},"to":{"krate":0,"index":882}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":91759,"byte_end":91773,"line_start":13,"line_end":13,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":92313,"byte_end":92330,"line_start":37,"line_end":37,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":93286,"byte_end":93299,"line_start":72,"line_end":72,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":94234,"byte_end":94242,"line_start":101,"line_end":101,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,109,101,116,97,100,97,116,97,46,114,115],"byte_start":95399,"byte_end":95407,"line_start":132,"line_end":132,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":958},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":104486,"byte_end":104499,"line_start":65,"line_end":65,"column_start":28,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":70},"to":{"krate":0,"index":1052}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":105195,"byte_end":105217,"line_start":81,"line_end":81,"column_start":24,"column_end":46},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":1816},"to":{"krate":0,"index":70}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":105246,"byte_end":105268,"line_start":82,"line_end":82,"column_start":26,"column_end":48},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1816},"to":{"krate":0,"index":1052}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":108338,"byte_end":108348,"line_start":161,"line_end":161,"column_start":67,"column_end":77},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":109678,"byte_end":109688,"line_start":206,"line_end":206,"column_start":52,"column_end":62},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":110077,"byte_end":110089,"line_start":221,"line_end":221,"column_start":27,"column_end":39},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":206}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":110427,"byte_end":110439,"line_start":228,"line_end":228,"column_start":60,"column_end":72},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":210}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":112400,"byte_end":112412,"line_start":277,"line_end":277,"column_start":26,"column_end":38},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":116294,"byte_end":116306,"line_start":356,"line_end":356,"column_start":36,"column_end":48},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":1094},"to":{"krate":2,"index":2516}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":117071,"byte_end":117087,"line_start":378,"line_end":378,"column_start":27,"column_end":43},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":206}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":117375,"byte_end":117391,"line_start":384,"line_end":384,"column_start":70,"column_end":86},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":210}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":117849,"byte_end":117865,"line_start":396,"line_end":396,"column_start":36,"column_end":52},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,98,97,115,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":120667,"byte_end":120683,"line_start":464,"line_end":464,"column_start":45,"column_end":61},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":122709,"byte_end":122721,"line_start":41,"line_end":41,"column_start":52,"column_end":64},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":1848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":125520,"byte_end":125541,"line_start":123,"line_end":123,"column_start":52,"column_end":73},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":1854},"to":{"krate":0,"index":70}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":125956,"byte_end":125977,"line_start":137,"line_end":137,"column_start":54,"column_end":75},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":1854},"to":{"krate":0,"index":1052}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127331,"byte_end":127345,"line_start":163,"line_end":163,"column_start":44,"column_end":58},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":1250},"to":{"krate":2,"index":2516}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127488,"byte_end":127502,"line_start":169,"line_end":169,"column_start":27,"column_end":41},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":1250},"to":{"krate":0,"index":206}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":127734,"byte_end":127748,"line_start":175,"line_end":175,"column_start":68,"column_end":82},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":1250},"to":{"krate":0,"index":210}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":128395,"byte_end":128409,"line_start":191,"line_end":191,"column_start":17,"column_end":31},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":1264},"to":{"krate":18,"index":668}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,112,114,111,100,117,99,101,114,47,102,117,116,117,114,101,95,112,114,111,100,117,99,101,114,46,114,115],"byte_start":128600,"byte_end":128614,"line_start":200,"line_end":200,"column_start":34,"column_end":48},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133356,"byte_end":133367,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":1860},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":133787,"byte_end":133798,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":1910},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134488,"byte_end":134499,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":1960},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134629,"byte_end":134640,"line_start":64,"line_end":64,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":2010},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134735,"byte_end":134746,"line_start":70,"line_end":70,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":2060},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":134880,"byte_end":134891,"line_start":77,"line_end":77,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":2110},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,115,116,97,116,105,115,116,105,99,115,46,114,115],"byte_start":135537,"byte_end":135548,"line_start":105,"line_end":105,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":2160},"to":{"krate":15,"index":1262}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":148505,"byte_end":148511,"line_start":36,"line_end":36,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":149497,"byte_end":149519,"line_start":67,"line_end":67,"column_start":10,"column_end":32},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":150767,"byte_end":150789,"line_start":111,"line_end":111,"column_start":24,"column_end":46},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151192,"byte_end":151210,"line_start":124,"line_end":124,"column_start":16,"column_end":34},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2516}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":151400,"byte_end":151418,"line_start":131,"line_end":131,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[100]},"from":{"krate":0,"index":1376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":157357,"byte_end":157375,"line_start":278,"line_end":278,"column_start":15,"column_end":33},"kind":{"variant":"Impl","fields":[101]},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":157659,"byte_end":157677,"line_start":288,"line_end":288,"column_start":20,"column_end":38},"kind":{"variant":"Impl","fields":[102]},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":158118,"byte_end":158136,"line_start":304,"line_end":304,"column_start":18,"column_end":36},"kind":{"variant":"Impl","fields":[103]},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,116,111,112,105,99,95,112,97,114,116,105,116,105,111,110,95,108,105,115,116,46,114,115],"byte_start":158215,"byte_end":158233,"line_start":310,"line_end":310,"column_start":21,"column_end":39},"kind":{"variant":"Impl","fields":[104]},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":7992}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":164819,"byte_end":164823,"line_start":65,"line_end":65,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1650},"to":{"krate":0,"index":1470}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":164826,"byte_end":164830,"line_start":65,"line_end":65,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1662},"to":{"krate":0,"index":1470}},{"span":{"file_name":[47,85,115,101,114,115,47,122,48,48,50,113,113,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,100,107,97,102,107,97,45,48,46,49,55,46,48,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":165429,"byte_end":165432,"line_start":92,"line_end":92,"column_start":37,"column_end":40},"kind":{"variant":"Impl","fields":[106]},"from":{"krate":4,"index":178},"to":{"krate":0,"index":1470}}]}